"use strict";(self.webpackChunksaasus_platform_document=self.webpackChunksaasus_platform_document||[]).push([[9455],{28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var s=a(96540);const t={},r=s.createContext(t);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},46742:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"usecase/about-saas-user-accounts","title":"About SaaS User Accounts","description":"This document will explain how SaaS user accounts are managed on the SaaSus Platform.","source":"@site/versioned_docs/version-1.11/usecase/about-saas-user-accounts.mdx","sourceDirName":"usecase","slug":"/usecase/about-saas-user-accounts","permalink":"/docs/usecase/about-saas-user-accounts","draft":false,"unlisted":false,"tags":[],"version":"1.11","frontMatter":{"title":"About SaaS User Accounts","slug":"about-saas-user-accounts","excerpt":"","hidden":false,"createdAt":"Tue Aug 15 2023 16:10:57 GMT+0000 (Coordinated Universal Time)","updatedAt":"Thu Dec 21 2023 22:58:51 GMT+0000 (Coordinated Universal Time)"},"sidebar":"guideSidebar","previous":{"title":"Implementing Multi-Factor Authentication (API Server)","permalink":"/docs/implementation-guide/implementing-multi-factor-authentication-apiserver"},"next":{"title":"Creating a Tenant","permalink":"/docs/usecase/about-saas-user-accounts/create-tenant"}}');var t=a(74848),r=a(28453),i=a(65537),l=a(79329);const o={title:"About SaaS User Accounts",slug:"about-saas-user-accounts",excerpt:"",hidden:!1,createdAt:"Tue Aug 15 2023 16:10:57 GMT+0000 (Coordinated Universal Time)",updatedAt:"Thu Dec 21 2023 22:58:51 GMT+0000 (Coordinated Universal Time)"},c=void 0,u={},d=[{value:"1. Components of an Account",id:"1-components-of-an-account",level:2},{value:"2. About Relations",id:"2-about-relations",level:2},{value:"3. About Account Creation Patterns",id:"3-about-account-creation-patterns",level:2},{value:"3.1. Implementation for Self-Signup Case",id:"31-implementation-for-self-signup-case",level:3},{value:"3.1.1. Allow User Self-Signup",id:"311-allow-user-self-signup",level:4},{value:"3.1.2. Implement Handling of Post-Self-Signup Process",id:"312-implement-handling-of-post-self-signup-process",level:4},{value:"3.1.3. Implementation Sample",id:"313-implementation-sample",level:4},{value:"3.2. Implementation for the Case where SaaS have User Creation Feature",id:"32-implementation-for-the-case-where-saas-have-user-creation-feature",level:3},{value:"3.3. Implementation for the Case where Account Creation is done from SaaS Operation Console",id:"33-implementation-for-the-case-where-account-creation-is-done-from-saas-operation-console",level:3}];function h(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This document will explain how SaaS user accounts are managed on the SaaSus Platform."}),"\n",(0,t.jsx)(n.h2,{id:"1-components-of-an-account",children:"1. Components of an Account"}),"\n",(0,t.jsx)(n.p,{children:"An account consist of the following elements, which must all be set to allow usage:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["SaaS User",(0,t.jsx)(n.br,{}),"\n","Stores the authentication data (ID, Password) for the SaaS"]}),"\n",(0,t.jsxs)(n.li,{children:["Tenant User",(0,t.jsx)(n.br,{}),"\n","Stores which tenant the SaaS user belongs to"]}),"\n",(0,t.jsxs)(n.li,{children:["Role",(0,t.jsx)(n.br,{}),"\n","Stores which permissions the tenant user has"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"2-about-relations",children:"2. About Relations"}),"\n",(0,t.jsxs)(n.p,{children:["A SaaS user can belong to multiple tenants.",(0,t.jsx)(n.br,{}),"\n","Also, a user can have multiple roles within a tenant."]}),"\n",(0,t.jsxs)(n.p,{children:["Example)",(0,t.jsx)(n.br,{}),"\n","User A belongs to tenant A and has the role of Administrator.",(0,t.jsx)(n.br,{}),"\n","User A also belongs to tenant B and has roles of both Administrator and Regular User.",(0,t.jsx)(n.br,{}),"\n","It can be expressed diagrammatically as follows:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"relation",src:a(61901).A+""})}),"\n",(0,t.jsx)(n.h2,{id:"3-about-account-creation-patterns",children:"3. About Account Creation Patterns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Case of Self-Signup",(0,t.jsx)(n.br,{}),"\n","Example)",(0,t.jsx)(n.br,{}),"\n","The user who wants to use the SaaS creates their own account from a self-signup page.",(0,t.jsx)(n.br,{}),"\n","The tenant is created at the time of account creation, and the user becomes the administrator of that tenant."]}),"\n",(0,t.jsxs)(n.li,{children:["Case where the SaaS has a User Creation Function Implemented",(0,t.jsx)(n.br,{}),"\n","Example)",(0,t.jsx)(n.br,{}),"\n",'The tenant\'s administrator creates roles of "Administrator" and "Regular User" using the user creation function.']}),"\n",(0,t.jsxs)(n.li,{children:["Case where an Account is Created from the SaaS Operation Console",(0,t.jsx)(n.br,{}),"\n","Example)",(0,t.jsx)(n.br,{}),"\n","Upon request from a user, the SaaS administrator creates an account from the SaaS Operation Console.",(0,t.jsx)(n.br,{}),"\n","sign in information is notified to the user via email or EventBridge integration, and the user starts using the account."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"31-implementation-for-self-signup-case",children:"3.1. Implementation for Self-Signup Case"}),"\n",(0,t.jsx)(n.h4,{id:"311-allow-user-self-signup",children:"3.1.1. Allow User Self-Signup"}),"\n",(0,t.jsxs)(n.p,{children:["SaaS Development Console - Authentication Authorization - Advanced Settings - Authentication Tab - Self-Signup (new registration by the user)",(0,t.jsx)(n.br,{}),"\n",'Enable "Users can register themselves".']}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"self-sign-up-setting",src:a(57587).A+"",width:"2878",height:"1372"})}),"\n",(0,t.jsx)(n.p,{children:'When allowing self-signup, "Sign up here" will be displayed on the sign in page generated by the SaaSus Platform.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"self-sign-up",src:a(88160).A+"",width:"1168",height:"914"})}),"\n",(0,t.jsxs)(n.p,{children:["The users can create accounts from this link.",(0,t.jsx)(n.br,{}),"\n","What gets created here is the 'SaaS User' in the components of an account."]}),"\n",(0,t.jsx)(n.h4,{id:"312-implement-handling-of-post-self-signup-process",children:"3.1.2. Implement Handling of Post-Self-Signup Process"}),"\n",(0,t.jsxs)(n.p,{children:["When self-signup is completed, the user transitions to your SaaS in a sign in state.\nThe transition page can be set at:",(0,t.jsx)(n.br,{}),"\n","SaaS Development Console - Basics - Auth Transition - Callback URL"]}),"\n",(0,t.jsxs)(n.p,{children:["When self-signup is enabled, the following judgement needs to be made at the Callback URL.",(0,t.jsx)(n.br,{}),"\n","This verification can be performed by checking whether the tenants information is included within the UserInfo array obtained from the SaaSus Platform."]}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsx)(l.A,{value:"php",label:"PHP",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"        // Implement self-signup process if tenant registration isn't done\n        if (empty($request->userinfo['tenants']))\n"})})}),(0,t.jsx)(l.A,{value:"nodejs",label:"Node.js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"        const userInfo = request.userInfo\n\n        // Implement self-signup process if tenant registration isn't done\n        if (!userInfo.tenants || userInfo.tenants.length === 0)\n"})})}),(0,t.jsx)(l.A,{value:"go",label:"Go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"        userInfo, ok := c.Get(string(ctxlib.UserInfoKey)).(*authapi.UserInfo)\n\n        // Implement self-signup process if tenant registration isn't done\n        if len(userInfo.Tenants) == 0 \n"})})}),(0,t.jsx)(l.A,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"        // Implement self-signup process if tenant registration isn't done\n        if not auth_user.tenants:\n"})})}),(0,t.jsx)(l.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"        // Implement self-signup process if tenant registration isn't done\n        if (userInfo.getTenants() == null || userInfo.getTenants().isEmpty())\n"})})}),(0,t.jsx)(l.A,{value:"csharp",label:"C#(.Net8)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"        // Implement self-signup process if tenant registration isn't done\n        if (userInfo.Tenants == null || !userInfo.Tenants.Any())\n"})})}),(0,t.jsx)(l.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"        // Implement self-signup process if tenant registration isn't done\n        if (userInfo.Tenants == null || !userInfo.Tenants.Any())\n"})})})]}),"\n",(0,t.jsx)(n.h4,{id:"313-implementation-sample",children:"3.1.3. Implementation Sample"}),"\n",(0,t.jsxs)(n.p,{children:["Try modifying the ",(0,t.jsx)("a",{href:"/docs/usecase/about-saas-user-accounts/create-tenant",target:"blank",children:"Creating a Tenant"}),", so that tenant registration can be done."]}),"\n",(0,t.jsxs)(n.p,{children:["Once tenant registration can be done, let's ",(0,t.jsx)("a",{href:"/docs/usecase/about-saas-user-accounts/add-tenant-user",target:"_blank",children:"assign a user to a tenant and set a role"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"After creating a tenant and a tenant user, verify whether the configured tenant information appears in the tenants array within UserInfo."}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsx)(l.A,{value:"php",label:"PHP",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"dd($request->userinfo['tenants']);\n"})})}),(0,t.jsx)(l.A,{value:"nodejs",label:"Node.js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"        const userInfo = request.userInfo\n        console.log(userInfo.tenants)\n"})})}),(0,t.jsx)(l.A,{value:"go",label:"Go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'        fmt.Printf("Tenants: %+v\\n", tenants)\n'})})}),(0,t.jsx)(l.A,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"        print(auth_user.tenants)\n"})})}),(0,t.jsx)(l.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"        UserInfo userInfo = null;\n        userInfo = userInfoApi.getUserInfo(getIDToken(request));\n        System.out.println(userInfo);\n"})})}),(0,t.jsx)(l.A,{value:"csharp",label:"C#(.Net8)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'        var authApiClientConfig = CreateClientConfiguration(c => c.GetAuthApiClientConfig(), context);\n        var userInfoApi = new UserInfoApi(authApiClientConfig);\n        var userInfo = await userInfoApi.GetUserInfoAsync(token);\n        Console.WriteLine(string.Join("\\n", userInfo.Tenants.Select(tenant => tenant.ToString())));\n'})})}),(0,t.jsx)(l.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"        var authApiClientConfig = CreateClientConfiguration(c => c.GetAuthApiClientConfig());\n        var userInfoApi = new UserInfoApi(authApiClientConfig);\n        var userInfo = await userInfoApi.GetUserInfoAsync(token);\n        foreach (var tenant in userInfo.Tenants)\n        {\n            Console.WriteLine(tenant.ToString());\n        }\n"})})})]}),"\n",(0,t.jsx)(n.p,{children:"Once the tenant information can be obtained, and the tenant user has been created, try to sign in through a normal sign in flow to verify if it works."}),"\n",(0,t.jsx)(n.h3,{id:"32-implementation-for-the-case-where-saas-have-user-creation-feature",children:"3.2. Implementation for the Case where SaaS have User Creation Feature"}),"\n",(0,t.jsx)(n.p,{children:"Let's implement the case where the administrator, who self-signed up, creates a new user."}),"\n",(0,t.jsx)(n.p,{children:"Firstly, register a new user on SaaS."}),"\n",(0,t.jsxs)(i.A,{children:[(0,t.jsx)(l.A,{value:"php",label:"PHP",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"        $client = new ApiClient();\n        $authApiClient = $client->getAuthClient();\n\n        $createSaasUserParam = new CreateSaasUserParam();\n        $createSaasUserParam\n            ->setEmail($inputs['email'])\n            ->setPassword($inputs['password']);\n\n        $authApiClient->createSaasUser($createSaasUserParam);\n"})})}),(0,t.jsx)(l.A,{value:"nodejs",label:"Node.js",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"        const client = new AuthClient()\n\n        const createSaasUserParam: CreateSaasUserParam = {\n          email,\n          password\n        }\n\n        await client.saasUserApi.createSaasUser(createSaasUserParam)\n"})})}),(0,t.jsx)(l.A,{value:"go",label:"Go",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:"        var authClient *authapi.ClientWithResponses\n\n        createSaasUserParam := authapi.CreateSaasUserJSONRequestBody{\n          Email:    email,\n          Password: password,\n        }\n\n        _, err = authClient.CreateSaasUser(context.Background(), createSaasUserParam)\n"})})}),(0,t.jsx)(l.A,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"        from saasus_sdk_python.src.auth import SaasUserApi, CreateSaasUserParam\n\n        api_client = SignedAuthApiClient()\n        \n        create_saas_user_param = CreateSaasUserParam(email=email, password=password)\n\n        SaasUserApi(api_client=api_client).create_saas_user(create_saas_user_param=create_saas_user_param)\n"})})}),(0,t.jsx)(l.A,{value:"java",label:"Java",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'        AuthApiClient apiClient = new Configuration().getAuthApiClient();\n        apiClient.setReferer(request.getHeader("Referer"));\n        \n        CreateSaasUserParam createSaasUserParam = new CreateSaasUserParam().email(email).password(password);\n        saasUserApi.createSaasUser(createSaasUserParam);\n'})})}),(0,t.jsx)(l.A,{value:"csharp",label:"C#(.Net8)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"        var saasUserApi = new SaasUserApi(authApiClientConfig);\n\n        var createSaasUserParam = new CreateSaasUserParam(email, password);\n        \n        await saasUserApi.CreateSaasUserAsync(createSaasUserParam);\n"})})}),(0,t.jsx)(l.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"        var saasUserApi = new SaasUserApi(authApiClientConfig);\n\n        var createSaasUserParam = new CreateSaasUserParam(email, password);\n        \n        await saasUserApi.CreateSaasUserAsync(createSaasUserParam);\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Once user registration is successful on SaaS, retrieve the tenant information from the registrant's ",(0,t.jsx)(n.code,{children:"request->userinfo['tenants']"}),", and ",(0,t.jsx)("a",{href:"/docs/usecase/about-saas-user-accounts/add-tenant-user",target:"_blank",children:"assign a user to a tenant and set a role"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"33-implementation-for-the-case-where-account-creation-is-done-from-saas-operation-console",children:"3.3. Implementation for the Case where Account Creation is done from SaaS Operation Console"}),"\n",(0,t.jsx)(n.p,{children:"Coming soon."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},57587:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/self-sign-up-setting-355b7357e77de423b501e68e481f276d.png"},61901:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/relation-12178a96c37cc2760f66607d713de499.svg"},65537:(e,n,a)=>{a.d(n,{A:()=>A});var s=a(96540),t=a(34164),r=a(65627),i=a(56347),l=a(50372),o=a(30604),c=a(11861),u=a(78749);function d(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:a}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:a,attributes:s,default:t}}=e;return{value:n,label:a,attributes:s,default:t}}))}(a);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function p(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:a}=e;const t=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,o.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(t.location.search);n.set(r,e),t.replace({...t.location,search:n.toString()})}),[r,t])]}function f(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,r=h(e),[i,o]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=a.find((e=>e.default))??a[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[c,d]=m({queryString:a,groupId:t}),[f,g]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,r]=(0,u.Dv)(a);return[t,(0,s.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:t}),x=(()=>{const e=c??f;return p({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{x&&o(x)}),[x]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),g(e)}),[d,g,r]),tabValues:r}}var g=a(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=a(74848);function j(e){let{className:n,block:a,selectedValue:s,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,a=o.indexOf(n),t=l[a].value;t!==s&&(c(n),i(t))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;n=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;n=o[a]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{o.push(e)},onKeyDown:d,onClick:u,...r,className:(0,t.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":s===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:r}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function S(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,t.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function A(e){const n=(0,g.A)();return(0,b.jsx)(S,{...e,children:d(e.children)},String(n))}},79329:(e,n,a)=>{a.d(n,{A:()=>i});a(96540);var s=a(34164);const t={tabItem:"tabItem_Ymn6"};var r=a(74848);function i(e){let{children:n,hidden:a,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(t.tabItem,i),hidden:a,children:n})}},88160:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/self-sign-up-081ca478ff0dc80c94202c907a91983e.png"}}]);