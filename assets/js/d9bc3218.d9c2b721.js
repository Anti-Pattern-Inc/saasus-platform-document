"use strict";(self.webpackChunksaasus_platform_document=self.webpackChunksaasus_platform_document||[]).push([[7795],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(96540);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},72037:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"part-4/mcp-server/export-user-info-csv","title":"User List CSV Export Procedure","description":"Overview","source":"@site/versioned_docs/version-1.11/part-4/mcp-server/export-user-info-csv.md","sourceDirName":"part-4/mcp-server","slug":"/part-4/mcp-server/export-user-info-csv","permalink":"/docs/part-4/mcp-server/export-user-info-csv","draft":false,"unlisted":false,"tags":[],"version":"1.11","frontMatter":{"title":"User List CSV Export Procedure","slug":"export-user-info-csv","excerpt":"","hidden":false,"createdAt":"Mon May 27 2024 08:41:59 GMT+0000 (Coordinated Universal Time)","updatedAt":"Mon May 27 2024 08:41:59 GMT+0000 (Coordinated Universal Time)"},"sidebar":"docsSidebar","previous":{"title":"Bulk User Registration Procedure","permalink":"/docs/part-4/mcp-server/bulk-user-registration"},"next":{"title":"Environment Information Acquisition Procedure","permalink":"/docs/part-4/mcp-server/clone-dev-settings"}}');var s=n(74848),i=n(28453);const o={title:"User List CSV Export Procedure",slug:"export-user-info-csv",excerpt:"",hidden:!1,createdAt:"Mon May 27 2024 08:41:59 GMT+0000 (Coordinated Universal Time)",updatedAt:"Mon May 27 2024 08:41:59 GMT+0000 (Coordinated Universal Time)"},a="SaaSus Platform User List CSV Export Procedure",l={},u=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Request Text for MCP Server",id:"request-text-for-mcp-server",level:2},{value:"Basic Request Text",id:"basic-request-text",level:3},{value:"Output File Format",id:"output-file-format",level:2},{value:"CSV Header",id:"csv-header",level:3},{value:"Example Data Rows",id:"example-data-rows",level:3},{value:"Notes",id:"notes",level:2},{value:"Customization",id:"customization",level:2},{value:"Adding Fields",id:"adding-fields",level:3},{value:"Changing Filter Conditions",id:"changing-filter-conditions",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"saasus-platform-user-list-csv-export-procedure",children:"SaaSus Platform User List CSV Export Procedure"})}),"\n",(0,s.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(t.p,{children:"This is a procedure document for comprehensively retrieving user information registered in SaaSus Platform and outputting it in CSV format."}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"SaaSus API MCP Server must be configured"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"request-text-for-mcp-server",children:"Request Text for MCP Server"}),"\n",(0,s.jsx)(t.h3,{id:"basic-request-text",children:"Basic Request Text"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"Please export the user list to CSV.\n\n[Output Settings]\nOutput format = CSV\nFile name = saasus_users.csv\nNo intermediate artifacts required\nOutput the resulting CSV file directly\nIf the same user has multiple tenants or roles, output as separate rows\nDo not use cache, always retrieve the latest information\n\n[Field Settings]\nEmail address = true\nTenant name = true\nEnvironment = true\nRole = true\n; If there are other custom attributes, add them below\n; Name = true\n; Custom attribute 1 = true\n; Custom attribute 2 = true\n\n[Field Descriptions]\nEmail address: User's email address\nTenant name: Name of the tenant the user belongs to\nEnvironment: Environment the user is using (e.g., production, development, test, etc.)\nRole: Role assigned to the user (e.g., administrator, user, guest, etc.)\n; Name: User's full name\n; Custom attribute 1: Description of any custom attribute 1\n; Custom attribute 2: Description of any custom attribute 2\n\n[Output Conditions]\n; Set filter conditions when outputting the user list\n; Example: To output only users belonging to a specific tenant, set as follows\n; Tenant name = Specific tenant name\n; Example: To output users only in a specific environment, set as follows\n; Environment = production\n; Example: To output only users with specific roles, set as follows\n; Role = administrator, user\n; Example: To output only users with a specific name, set as follows\n; Name = John Doe\nTenant name = Tenant2\n\n[Output Example]\n; The following is an example of the output CSV\n; Email address,Tenant name,Environment,Role,Name\n; user1-1@example.com,Tenant1,prod,administrator,User1-1\n; user1-1@example.com,Tenant1,prod,general user,User1-1\n; user1-2@example.com,Tenant1,prod,administrator,User1-2\n; user2-1@example.com,Tenant2,prod,administrator,User2-1\n"})}),"\n",(0,s.jsx)(t.h2,{id:"output-file-format",children:"Output File Format"}),"\n",(0,s.jsx)(t.h3,{id:"csv-header",children:"CSV Header"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csv",children:"Email address,Tenant name,Environment,Role\n"})}),"\n",(0,s.jsx)(t.h3,{id:"example-data-rows",children:"Example Data Rows"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csv",children:"user2-1@example.com,Tenant2,prod,administrator\nuser2-2@example.com,Tenant2,prod,general user\nuser2-3@example.com,Tenant2,dev,administrator\nuser2-3@example.com,Tenant2,dev,general user\n"})}),"\n",(0,s.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"If the same user belongs to multiple tenants, they will be output as separate rows for each tenant"}),"\n",(0,s.jsx)(t.li,{children:"If the same user has multiple roles, they will be output as separate rows for each role"}),"\n",(0,s.jsx)(t.li,{children:"If filter conditions are specified, only users matching the conditions will be output"}),"\n",(0,s.jsx)(t.li,{children:"The output data is the latest information at the time of execution (cache is not used)"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsx)(t.h3,{id:"adding-fields",children:"Adding Fields"}),"\n",(0,s.jsxs)(t.p,{children:["If you want to include user names or custom attributes in the output, set the corresponding items to ",(0,s.jsx)(t.code,{children:"true"})," in the [Field Settings] section."]}),"\n",(0,s.jsx)(t.h3,{id:"changing-filter-conditions",children:"Changing Filter Conditions"}),"\n",(0,s.jsx)(t.p,{children:"If you want to filter users by specific conditions, specify the conditions in the [Output Conditions] section. Multiple conditions can be combined."})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);