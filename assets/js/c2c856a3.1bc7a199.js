"use strict";(self.webpackChunksaasus_platform_document=self.webpackChunksaasus_platform_document||[]).push([[4724],{11191:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/image-01-9db55adf545d50796b4c2dd1165ff4a2.png"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(96540);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},65537:(e,n,t)=>{t.d(n,{A:()=>S});var i=t(96540),r=t(34164),a=t(65627),s=t(56347),l=t(50372),o=t(30604),d=t(11861),c=t(78749);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(a),(0,i.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=p(e),[s,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:a}))),[d,h]=m({queryString:t,groupId:r}),[g,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,a]=(0,c.Dv)(t);return[r,(0,i.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:r}),j=(()=>{const e=d??g;return u({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{j&&o(j)}),[j]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!u({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),x(e)}),[h,x,a]),tabValues:a}}var x=t(9136);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function f(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),r=l[t].value;r!==i&&(d(n),s(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{o.push(e)},onKeyDown:h,onClick:c,...a,className:(0,r.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",j.tabList),children:[(0,b.jsx)(f,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function S(e){const n=(0,x.A)();return(0,b.jsx)(y,{...e,children:h(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var i=t(34164);const r={tabItem:"tabItem_Ymn6"};var a=t(74848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,s),hidden:t,children:n})}},91025:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"part-6/implementation-guide/sample-application/billing-dashboard","title":"Billing Dashboard Implementation","description":"Overview","source":"@site/versioned_docs/version-1.11/part-6/implementation-guide/sample-application/billing-dashboard.md","sourceDirName":"part-6/implementation-guide/sample-application","slug":"/part-6/implementation-guide/sample-application/billing-dashboard","permalink":"/docs/part-6/implementation-guide/sample-application/billing-dashboard","draft":false,"unlisted":false,"tags":[],"version":"1.11","frontMatter":{"title":"Billing Dashboard Implementation","slug":"billing-dashboard","excerpt":"Implementation guide for a tenant-based real-time billing dashboard using SaaSus Metering and Pricing APIs","hidden":false,"createdAt":"Thu Jul 31 2025 00:00:00 GMT+0000 (Coordinated Universal Time)","updatedAt":"Thu Oct 09 2025 00:00:00 GMT+0000 (Coordinated Universal Time)"},"sidebar":"docsSidebar","previous":{"title":"Plan Change Implementation","permalink":"/docs/part-6/implementation-guide/sample-application/plan-change-implementation"},"next":{"title":"Metering API Implementation Samples","permalink":"/docs/part-6/implementation-guide/sample-application/metering-api"}}');var r=t(74848),a=t(28453),s=t(65537),l=t(79329);const o={title:"Billing Dashboard Implementation",slug:"billing-dashboard",excerpt:"Implementation guide for a tenant-based real-time billing dashboard using SaaSus Metering and Pricing APIs",hidden:!1,createdAt:"Thu Jul 31 2025 00:00:00 GMT+0000 (Coordinated Universal Time)",updatedAt:"Thu Oct 09 2025 00:00:00 GMT+0000 (Coordinated Universal Time)"},d=void 0,c={},h=[{value:"Overview",id:"overview",level:2},{value:"Frontend Implementation",id:"frontend-implementation",level:2},{value:"Example Implementations",id:"example-implementations",level:3},{value:"Backend Implementation",id:"backend-implementation",level:2},{value:"Endpoint Summary",id:"endpoint-summary",level:3},{value:"Plan Period Candidates Endpoint",id:"plan-period-candidates-endpoint",level:3},{value:"Implementing a Period Select Box",id:"implementing-a-period-select-box",level:4},{value:"Example Implementations",id:"example-implementations-1",level:4},{value:"Dashboard Aggregation Endpoint",id:"dashboard-aggregation-endpoint",level:3},{value:"Difference Between <code>max</code> and <code>sum</code> in <code>aggregate_usage</code>",id:"difference-between-max-and-sum-in-aggregate_usage",level:4},{value:"Billing Logic by <code>unit_type</code>",id:"billing-logic-by-unit_type",level:4},{value:"Example Implementations",id:"example-implementations-2",level:4},{value:"Meter Updates",id:"meter-updates",level:3},{value:"Inline Edit Example (Current Time)",id:"inline-edit-example-current-time",level:4},{value:"Example Implementations",id:"example-implementations-3",level:4},{value:"Modal Edit Example (Custom Timestamp)",id:"modal-edit-example-custom-timestamp",level:4},{value:"Example Implementations",id:"example-implementations-4",level:4}];function p(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["This guide explains how to implement a ",(0,r.jsx)(n.strong,{children:"tenant-based real-time billing dashboard"})," by combining the SaaSus Metering API and Pricing API, based on the sample app ",(0,r.jsx)(n.em,{children:"Billing Dashboard"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Screenshot of the billing dashboard:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(11191).A+"",width:"1440",height:"1286"})}),"\n",(0,r.jsx)(n.h2,{id:"frontend-implementation",children:"Frontend Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"example-implementations",children:"Example Implementations"}),"\n",(0,r.jsx)(n.p,{children:"The following links point to repositories that include implementations of the frontend."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"React"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-front-react/blob/main/src/pages/BillingDashboard.tsx",children:(0,r.jsx)(n.code,{children:"BillingDashboard.tsx"})})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"backend-implementation",children:"Backend Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"endpoint-summary",children:"Endpoint Summary"}),"\n",(0,r.jsx)("div",{className:"table-scroll",children:(0,r.jsxs)("table",{className:"nowrap-table",children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Category"}),(0,r.jsx)("th",{children:"Method & Path"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Plan Period Candidates"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"GET /billing/plan_periods?tenant_id="})}),(0,r.jsx)("td",{children:"Returns monthly or yearly periods based on the tenant's plan history. Used for generating a select box."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Dashboard Aggregation"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"GET /billing/dashboard"})}),(0,r.jsx)("td",{children:"Retrieves metering summaries, billing amounts, and plan information in one response."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Meter Update (Current Time)"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"POST /billing/metering/{tenant_id}/{unit}"})}),(0,r.jsxs)("td",{children:["Applies immediate metering updates using ",(0,r.jsx)("code",{children:"add / sub / direct"})," method."]})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:"Meter Update (Custom Timestamp)"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"POST /billing/metering/{tenant_id}/{unit}/{ts}"})}),(0,r.jsx)("td",{children:"Updates metering values using a specified timestamp. Useful for corrections."})]})]})]})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Plan history can be obtained from the ",(0,r.jsx)(n.code,{children:"plan_histories"})," array in the response of ",(0,r.jsx)(n.a,{href:"/docs/reference/auth-api#tag/tenant/operation/GetTenant",children:"Get Tenant Details"})," in the Auth API."]})}),"\n",(0,r.jsx)(n.h3,{id:"plan-period-candidates-endpoint",children:"Plan Period Candidates Endpoint"}),"\n",(0,r.jsx)(n.h4,{id:"implementing-a-period-select-box",children:"Implementing a Period Select Box"}),"\n",(0,r.jsxs)(n.p,{children:["The backend splits plan periods into ",(0,r.jsx)(n.em,{children:"monthly"})," or ",(0,r.jsx)(n.em,{children:"yearly"})," segments and returns labels and Unix timestamps (seconds) for the frontend."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"plan_histories"})," array (which contains ",(0,r.jsx)(n.code,{children:"plan_id"})," and ",(0,r.jsx)(n.code,{children:"plan_applied_at"}),") from the response of ",(0,r.jsx)(n.a,{href:"/docs/reference/auth-api#tag/tenant/operation/GetTenant",children:"Get Tenant Details"})," in the Auth API to determine the plan application timing. Treat ",(0,r.jsx)(n.code,{children:"current_plan_period_end"})," as the final boundary. Exclude entries with an empty ",(0,r.jsx)(n.code,{children:"plan_id"}),"."]})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"The following implementation flow and code samples assume a Go backend and a React frontend."})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Implementation Flow"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Get Tenant Info"})," \u2014 Retrieve ",(0,r.jsx)(n.code,{children:"planHistories"})," and ",(0,r.jsx)(n.code,{children:"currentPlanPeriodEnd"})," from the Auth API."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create Boundary Edges"})," \u2014 Sort ",(0,r.jsx)(n.code,{children:"planAppliedAt"})," chronologically to form ",(0,r.jsx)(n.code,{children:"edge"})," array."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Define Final Boundary"})," \u2014 Use ",(0,r.jsx)(n.code,{children:"currentPlanPeriodEnd"})," (or now if unavailable) minus 1 second as the final edge."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Split Periods"})," \u2014 Determine if the interval is monthly or yearly, then generate ",(0,r.jsx)(n.code,{children:"PlanPeriodOption"})," using ",(0,r.jsx)(n.code,{children:"step()"})," loop."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sort by Latest First"})," \u2014 Sort by ",(0,r.jsx)(n.code,{children:"Start"})," in descending order and return to frontend."]}),"\n"]}),"\n",(0,r.jsx)(s.A,{children:(0,r.jsx)(l.A,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:"// Step 2 & 4: Create edges and split by month/year\ntype edge struct { PlanID string; Time time.Time }\n// ...populate edge array sorted by Time ascending...\nfor cur := periodStart; !cur.After(periodEnd); {\n    next := step(cur)        // +1M for month, +1Y for year\n    end  := next.Add(-1 * time.Second)\n    results = append(results, PlanPeriodOption{ Label: label(cur,end), PlanID: e.PlanID, Start: cur.Unix(), End: end.Unix() })\n    if end.Equal(periodEnd) { break }\n    cur = end.Add(time.Second)\n}\n"})})})}),"\n",(0,r.jsxs)(n.p,{children:["On the frontend, bind these to a ",(0,r.jsx)(n.code,{children:"<select>"})," element and refetch the dashboard on change:"]}),"\n",(0,r.jsx)(s.A,{children:(0,r.jsx)(l.A,{value:"typescript",label:"TypeScript",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'// BillingDashboard.tsx (excerpt)\nconst fetchPeriodOptions = async () => {\n  const res = await axios.get<PlanPeriodOption[]>("/billing/plan_periods", { params:{ tenant_id } });\n  setPeriodOptions(res.data);\n  setSelectedPeriod(toState(res.data[0]));\n};\n'})})})}),"\n",(0,r.jsx)(n.h4,{id:"example-implementations-1",children:"Example Implementations"}),"\n",(0,r.jsxs)(n.p,{children:["The following links point to repositories that include implementations of this endpoint.",(0,r.jsx)(n.br,{}),"\n","Search by function name to locate the relevant code."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,r.jsx)(n.code,{children:"getPlanPeriods"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,r.jsx)(n.code,{children:"get_plan_periods"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,r.jsx)(n.code,{children:"getPlanPeriods"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"GetPlanPeriods"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"GetPlanPeriods"})})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"dashboard-aggregation-endpoint",children:"Dashboard Aggregation Endpoint"}),"\n",(0,r.jsxs)(n.h4,{id:"difference-between-max-and-sum-in-aggregate_usage",children:["Difference Between ",(0,r.jsx)(n.code,{children:"max"})," and ",(0,r.jsx)(n.code,{children:"sum"})," in ",(0,r.jsx)(n.code,{children:"aggregate_usage"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Mode"}),(0,r.jsx)(n.th,{children:"Typical Use Case"}),(0,r.jsx)(n.th,{children:"Aggregation Method"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"sum"})," (default)"]}),(0,r.jsx)(n.td,{children:"API call counts / traffic"}),(0,r.jsx)(n.td,{children:"Use total value in period"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max"})}),(0,r.jsx)(n.td,{children:"Concurrent users / sessions"}),(0,r.jsx)(n.td,{children:"Use maximum value in period"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.code,{children:"calculateMeteringUnitBillings"}),", the function checks ",(0,r.jsx)(n.code,{children:"aggregate_usage"})," and uses the max or sum accordingly:"]}),"\n",(0,r.jsx)(s.A,{children:(0,r.jsx)(l.A,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'if aggUsage == "max" {\n    for _, c := range resp.JSON200.Counts {\n        if float64(c.Count) > count { count = float64(c.Count) }\n    }\n} else { // sum\n    for _, c := range resp.JSON200.Counts { count += float64(c.Count) }\n}\n'})})})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"aggregate_usage"})," setting is only visible in the UI when Stripe integration is enabled.",(0,r.jsx)(n.br,{}),"\n","It is hidden when using the platform standalone."]})}),"\n",(0,r.jsxs)(n.h4,{id:"billing-logic-by-unit_type",children:["Billing Logic by ",(0,r.jsx)(n.code,{children:"unit_type"})]}),"\n",(0,r.jsxs)(n.p,{children:["Metering units have a ",(0,r.jsx)(n.code,{children:"type"})," that determines the billing logic as follows:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"type"}),(0,r.jsx)(n.th,{children:"Measurement Unit"}),(0,r.jsx)(n.th,{children:"Billing Logic"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fixed"})}),(0,r.jsx)(n.td,{children:"Fixed Unit"}),(0,r.jsx)(n.td,{children:"Use fixed price as is"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"usage"})}),(0,r.jsx)(n.td,{children:"Usage Unit"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"count \xd7 price"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tiered"})}),(0,r.jsx)(n.td,{children:"Tiered Unit"}),(0,r.jsx)(n.td,{children:"Add prices based on matching tier"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tiered_usage"})}),(0,r.jsx)(n.td,{children:"Tiered Usage Unit"}),(0,r.jsx)(n.td,{children:"Accumulate from lower tiers upward"})]})]})]}),"\n",(0,r.jsx)(s.A,{children:(0,r.jsx)(l.A,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func calculateAmountByUnitType(count float64, u map[string]interface{}) float64 {\n  unitType, _ := u["type"].(string)\n  price, _ := u["unit_amount"].(float64)\n\n  switch unitType {\n  case "fixed":\n    return price\n  case "usage":\n    return count * price\n  case "tiered":\n    return calcTiered(count, u)\n  case "tiered_usage":\n    return calcTieredUsage(count, u)\n  default:\n    // Fallback: treat unknown type as usage\n    return count * price\n  }\n}\n'})})})}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.code,{children:"calcTiered"})," and ",(0,r.jsx)(n.code,{children:"calcTieredUsage"})," for details."]}),"\n",(0,r.jsx)(n.h4,{id:"example-implementations-2",children:"Example Implementations"}),"\n",(0,r.jsxs)(n.p,{children:["The following links point to repositories that include implementations of this endpoint.",(0,r.jsx)(n.br,{}),"\n","Search by function name to locate the relevant code."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,r.jsx)(n.code,{children:"getBillingDashboard"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,r.jsx)(n.code,{children:"get_billing_dashboard"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,r.jsx)(n.code,{children:"getBillingDashboard"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"GetBillingDashboard"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"GetBillingDashboard"})})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"meter-updates",children:"Meter Updates"}),"\n",(0,r.jsx)(n.p,{children:"The dashboard allows metering updates in two scenarios: inline edits (current time) and modal edits (specific timestamp)."}),"\n",(0,r.jsx)(n.h4,{id:"inline-edit-example-current-time",children:"Inline Edit Example (Current Time)"}),"\n",(0,r.jsx)(s.A,{children:(0,r.jsx)(l.A,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func updateCountOfNow(c echo.Context) error {\n    tenantId := c.Param("tenantId")\n    unitName := c.Param("unit")\n\n    userInfo, _ := c.Get(string(ctxlib.UserInfoKey)).(*authapi.UserInfo)\n    if !hasBillingAccess(userInfo, tenantId) {\n        return c.String(http.StatusForbidden, "Insufficient permissions")\n    }\n\n    var body struct {\n        Method string `json:"method"` // add | sub | direct\n        Count  int    `json:"count"`\n    }\n    if err := c.Bind(&body); err != nil {\n        return c.String(http.StatusBadRequest, "invalid JSON body")\n    }\n    if body.Count < 0 {\n        return c.String(http.StatusBadRequest, "count must be >= 0")\n    }\n\n    method := pricingapi.UpdateMeteringUnitTimestampCountMethod(body.Method)\n    switch method {\n    case pricingapi.Add, pricingapi.Sub, pricingapi.Direct:\n        // OK\n    default:\n        return c.String(http.StatusBadRequest, "method must be add, sub, or direct")\n    }\n\n    param := pricingapi.UpdateMeteringUnitTimestampCountNowParam{\n        Method: method,\n        Count:  body.Count,\n    }\n\n    resp, err := pricingClient.UpdateMeteringUnitTimestampCountNowWithResponse(\n        c.Request().Context(), tenantId, unitName, param,\n    )\n    if err != nil {\n        log.Printf("pricing API error: %v", err)\n        return c.String(http.StatusInternalServerError, "pricing API error")\n    }\n    if resp.JSON200 == nil {\n        return c.String(resp.StatusCode(), string(resp.Body))\n    }\n\n    return c.JSON(http.StatusOK, resp.JSON200)\n}\n'})})})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"The inline plus/minus buttons are only displayed when the selected period is currently ongoing."})}),"\n",(0,r.jsx)(n.h4,{id:"example-implementations-3",children:"Example Implementations"}),"\n",(0,r.jsxs)(n.p,{children:["The following links point to repositories that include implementations of this endpoint.",(0,r.jsx)(n.br,{}),"\n","Search by function name to locate the relevant code."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,r.jsx)(n.code,{children:"updateCountOfNow"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,r.jsx)(n.code,{children:"update_count_of_now"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,r.jsx)(n.code,{children:"updateCountOfNow"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"UpdateMeteringCountNow"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"UpdateMeteringCountNow"})})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"modal-edit-example-custom-timestamp",children:"Modal Edit Example (Custom Timestamp)"}),"\n",(0,r.jsx)(s.A,{children:(0,r.jsx)(l.A,{value:"go",label:"Go",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'func updateCountOfSpecifiedTS(c echo.Context) error {\n    tenantId := c.Param("tenantId")\n    unitName := c.Param("unit")\n    tsStr := c.Param("ts")\n\n    userInfo, _ := c.Get(string(ctxlib.UserInfoKey)).(*authapi.UserInfo)\n    if !hasBillingAccess(userInfo, tenantId) {\n        return c.String(http.StatusForbidden, "Insufficient permissions")\n    }\n\n    ts, err := strconv.ParseInt(tsStr, 10, 64)\n    if err != nil {\n        return c.String(http.StatusBadRequest, "ts must be 10-digit unix seconds")\n    }\n\n    var body struct {\n        Method string `json:"method"` // add | sub | direct\n        Count  int    `json:"count"`\n    }\n    if err := c.Bind(&body); err != nil {\n        return c.String(http.StatusBadRequest, "invalid JSON body")\n    }\n    if body.Count < 0 {\n        return c.String(http.StatusBadRequest, "count must be >= 0")\n    }\n\n    method := pricingapi.UpdateMeteringUnitTimestampCountMethod(body.Method)\n    switch method {\n    case pricingapi.Add, pricingapi.Sub, pricingapi.Direct:\n        // OK\n    default:\n        return c.String(http.StatusBadRequest, "method must be add, sub, or direct")\n    }\n\n    param := pricingapi.UpdateMeteringUnitTimestampCountParam{\n        Method: method,\n        Count:  body.Count,\n    }\n\n    resp, err := pricingClient.UpdateMeteringUnitTimestampCountWithResponse(\n        c.Request().Context(), tenantId, unitName, int(ts), param,\n    )\n    if err != nil {\n        log.Printf("pricing API error: %v", err)\n        return c.String(http.StatusInternalServerError, "pricing API error")\n    }\n    if resp.JSON200 == nil {\n        return c.String(resp.StatusCode(), string(resp.Body))\n    }\n\n    return c.JSON(http.StatusOK, resp.JSON200)\n}\n'})})})}),"\n",(0,r.jsx)(n.h4,{id:"example-implementations-4",children:"Example Implementations"}),"\n",(0,r.jsxs)(n.p,{children:["The following links point to repositories that include implementations of this endpoint.",(0,r.jsx)(n.br,{}),"\n","Search by function name to locate the relevant code."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,r.jsx)(n.code,{children:"updateCountOfSpecifiedTS"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,r.jsx)(n.code,{children:"update_count_of_specified_timestamp"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,r.jsx)(n.code,{children:"updateCountOfSpecifiedTimestamp"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"UpdateMeteringCount"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,r.jsx)(n.code,{children:"UpdateMeteringCount"})})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);