"use strict";(self.webpackChunksaasus_platform_document=self.webpackChunksaasus_platform_document||[]).push([[7228],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(96540);const i={},l=a.createContext(i);function r(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(l.Provider,{value:n},e.children)}},59494:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/image-01-c7c1d8e50d0cdb43dcee6b76d7285fef.png"},65537:(e,n,t)=>{t.d(n,{A:()=>P});var a=t(96540),i=t(34164),l=t(65627),r=t(56347),s=t(50372),o=t(30604),c=t(11861),p=t(78749);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function u(e){let{queryString:n=!1,groupId:t}=e;const i=(0,r.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(l),(0,a.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(i.location.search);n.set(l,e),i.replace({...i.location,search:n.toString()})}),[l,i])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,l=h(e),[r,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l}))),[c,d]=u({queryString:t,groupId:i}),[x,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,l]=(0,p.Dv)(t);return[i,(0,a.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:i}),f=(()=>{const e=c??x;return m({value:e,tabValues:l})?e:null})();(0,s.A)((()=>{f&&o(f)}),[f]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),g(e)}),[d,g,l]),tabValues:l}}var g=t(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(74848);function b(e){let{className:n,block:t,selectedValue:a,selectValue:r,tabValues:s}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),p=e=>{const n=e.currentTarget,t=o.indexOf(n),i=s[t].value;i!==a&&(c(n),r(i))},d=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{o.push(e)},onKeyDown:d,onClick:p,...l,className:(0,i.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:l}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===l));return e?(0,a.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function I(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,i.A)("tabs-container",f.tabList),children:[(0,j.jsx)(b,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function P(e){const n=(0,g.A)();return(0,j.jsx)(I,{...e,children:d(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var a=t(34164);const i={tabItem:"tabItem_Ymn6"};var l=t(74848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,r),hidden:t,children:n})}},87646:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"part-6/implementation-guide/sample-application/plan-change-implementation","title":"Plan Change Implementation","description":"Overview","source":"@site/versioned_docs/version-1.11/part-6/implementation-guide/sample-application/plan-change-implementation.md","sourceDirName":"part-6/implementation-guide/sample-application","slug":"/part-6/implementation-guide/sample-application/plan-change-implementation","permalink":"/docs/part-6/implementation-guide/sample-application/plan-change-implementation","draft":false,"unlisted":false,"tags":[],"version":"1.11","frontMatter":{"title":"Plan Change Implementation","slug":"plan-change-implementation","excerpt":"Implementation guide for tenant pricing plan change functionality using SaaSus Auth and Pricing APIs","hidden":false,"createdAt":"Sun Oct 06 2025 00:00:00 GMT+0000 (Coordinated Universal Time)","updatedAt":"Thu Oct 09 2025 00:00:00 GMT+0000 (Coordinated Universal Time)"},"sidebar":"docsSidebar","previous":{"title":"Activity History Log Implementation","permalink":"/docs/part-6/implementation-guide/sample-application/activity-history-log"},"next":{"title":"Billing Dashboard Implementation","permalink":"/docs/part-6/implementation-guide/sample-application/billing-dashboard"}}');var i=t(74848),l=t(28453),r=t(65537),s=t(79329);const o={title:"Plan Change Implementation",slug:"plan-change-implementation",excerpt:"Implementation guide for tenant pricing plan change functionality using SaaSus Auth and Pricing APIs",hidden:!1,createdAt:"Sun Oct 06 2025 00:00:00 GMT+0000 (Coordinated Universal Time)",updatedAt:"Thu Oct 09 2025 00:00:00 GMT+0000 (Coordinated Universal Time)"},c=void 0,p={},d=[{value:"Overview",id:"overview",level:2},{value:"Frontend Implementation",id:"frontend-implementation",level:2},{value:"Example Implementations",id:"example-implementations",level:3},{value:"Backend Implementation",id:"backend-implementation",level:2},{value:"Endpoint Summary",id:"endpoint-summary",level:3},{value:"Current Plan Information Retrieval Endpoint",id:"current-plan-information-retrieval-endpoint",level:3},{value:"Implementation Example (Retrieving Current Tax Rate Settings from History)",id:"implementation-example-retrieving-current-tax-rate-settings-from-history",level:4},{value:"Example Implementations",id:"example-implementations-1",level:4},{value:"Plan List Retrieval Endpoint",id:"plan-list-retrieval-endpoint",level:3},{value:"Plan Change Select Box Implementation",id:"plan-change-select-box-implementation",level:4},{value:"Example Implementations",id:"example-implementations-2",level:4},{value:"Tax Rate List Retrieval Endpoint",id:"tax-rate-list-retrieval-endpoint",level:3},{value:"Tax Rate Selection Select Box Implementation",id:"tax-rate-selection-select-box-implementation",level:4},{value:"Example Implementations",id:"example-implementations-3",level:4},{value:"Plan Change Execution Endpoint",id:"plan-change-execution-endpoint",level:3},{value:"Operations by Request Parameters",id:"operations-by-request-parameters",level:4},{value:"Plan Change Reservation",id:"plan-change-reservation",level:4},{value:"Plan Cancellation",id:"plan-cancellation",level:4},{value:"Reservation Cancellation",id:"reservation-cancellation",level:4},{value:"Backend Processing Logic",id:"backend-processing-logic",level:4},{value:"Example Implementations",id:"example-implementations-4",level:4}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"This page explains how to implement tenant pricing plan change functionality by combining SaaSus Auth API and Pricing API, using the plan change feature of the sample application as an example."}),"\n",(0,i.jsx)(n.p,{children:"Below is a screenshot of the plan settings screen."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(59494).A+"",width:"1440",height:"874"})}),"\n",(0,i.jsx)(n.p,{children:"The plan change functionality provides the following features:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Display current plan information"}),"\n",(0,i.jsx)(n.li,{children:"Display plan change reservation information"}),"\n",(0,i.jsx)(n.li,{children:"Execute plan changes"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"frontend-implementation",children:"Frontend Implementation"}),"\n",(0,i.jsx)(n.h3,{id:"example-implementations",children:"Example Implementations"}),"\n",(0,i.jsx)(n.p,{children:"The following links point to repositories that include implementations of the frontend."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-front-react/blob/main/src/pages/PlanSettings.tsx",children:(0,i.jsx)(n.code,{children:"PlanSettings.tsx"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"backend-implementation",children:"Backend Implementation"}),"\n",(0,i.jsx)(n.h3,{id:"endpoint-summary",children:"Endpoint Summary"}),"\n",(0,i.jsx)("div",{className:"table-scroll",children:(0,i.jsxs)("table",{className:"nowrap-table",children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Type"}),(0,i.jsx)("th",{children:"Method & Path"}),(0,i.jsx)("th",{children:"Description"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Current Plan Information"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"GET /tenants/{tenantId}/plan"})}),(0,i.jsx)("td",{children:"Retrieves the tenant's current plan information and history."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Plan List"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"GET /pricing_plans"})}),(0,i.jsx)("td",{children:"Retrieves a list of all pricing plans."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Tax Rate List"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"GET /tax_rates"})}),(0,i.jsx)("td",{children:"Retrieves a list of available tax rates."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Plan Change Execution"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"PUT /tenants/{tenantId}/plan"})}),(0,i.jsx)("td",{children:"Changes the tenant's pricing plan."})]})]})]})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"The following code samples assume Go for the backend."})}),"\n",(0,i.jsx)(n.h3,{id:"current-plan-information-retrieval-endpoint",children:"Current Plan Information Retrieval Endpoint"}),"\n",(0,i.jsx)(n.h4,{id:"implementation-example-retrieving-current-tax-rate-settings-from-history",children:"Implementation Example (Retrieving Current Tax Rate Settings from History)"}),"\n",(0,i.jsx)(r.A,{children:(0,i.jsx)(s.A,{value:"go",label:"Go",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'func getTenantPlanInfo(c echo.Context) error {\n    tenantId := c.Param("tenant_id")\n    if tenantId == "" {\n        return c.JSON(http.StatusBadRequest, echo.Map{"error": "tenant_id is required"})\n    }\n\n    userInfo, ok := c.Get(string(ctxlib.UserInfoKey)).(*authapi.UserInfo)\n    if !ok {\n        c.Logger().Error("failed to get user info")\n        return c.JSON(http.StatusInternalServerError, echo.Map{"error": "Internal server error"})\n    }\n\n    // Check admin permissions\n    if !hasBillingAccess(userInfo, tenantId) {\n        return c.JSON(http.StatusForbidden, echo.Map{"error": "Insufficient permissions"})\n    }\n\n    // Retrieve tenant detail information\n    tenantDetailResp, err := authClient.GetTenantWithResponse(context.Background(), authapi.TenantId(tenantId))\n    if err != nil {\n        c.Logger().Errorf("Failed to retrieve tenant detail: %v", err)\n        return c.JSON(http.StatusInternalServerError, echo.Map{"error": "Failed to retrieve tenant detail"})\n    }\n\n    if tenantDetailResp.StatusCode() != http.StatusOK {\n        c.Logger().Errorf("Failed to retrieve tenant detail: status %d", tenantDetailResp.StatusCode())\n        return c.JSON(http.StatusInternalServerError, echo.Map{"error": "Failed to retrieve tenant detail"})\n    }\n\n    if tenantDetailResp.JSON200 == nil {\n        return c.JSON(http.StatusNotFound, echo.Map{"error": "Tenant not found"})\n    }\n\n    // Get current tax rate settings (from the latest entry in plan history)\n    var currentTaxRateId *string\n    if len(tenantDetailResp.JSON200.PlanHistories) > 0 {\n        latestPlanHistory := tenantDetailResp.JSON200.PlanHistories[len(tenantDetailResp.JSON200.PlanHistories)-1]\n        if latestPlanHistory.TaxRateId != nil {\n            taxRateIdStr := string(*latestPlanHistory.TaxRateId)\n            currentTaxRateId = &taxRateIdStr\n        }\n    }\n\n    // Build response\n    response := echo.Map{\n        "id":               tenantDetailResp.JSON200.Id,\n        "name":             tenantDetailResp.JSON200.Name,\n        "plan_id":          tenantDetailResp.JSON200.PlanId,\n        "tax_rate_id":      currentTaxRateId,\n        "plan_reservation": nil,\n    }\n\n    // Add reservation information if available\n    if tenantDetailResp.JSON200.NextPlanId != nil {\n        planReservation := echo.Map{\n            "next_plan_id":          *tenantDetailResp.JSON200.NextPlanId,\n            "using_next_plan_from":  tenantDetailResp.JSON200.UsingNextPlanFrom,\n            "next_plan_tax_rate_id": tenantDetailResp.JSON200.NextPlanTaxRateId,\n        }\n        response["plan_reservation"] = planReservation\n    }\n\n    return c.JSON(http.StatusOK, response)\n}\n'})})})}),"\n",(0,i.jsx)(n.h4,{id:"example-implementations-1",children:"Example Implementations"}),"\n",(0,i.jsx)(n.p,{children:"The following links point to repositories that include implementations of this endpoint.\nSearch by function name to locate the relevant code."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,i.jsx)(n.code,{children:"getTenantPlanInfo"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,i.jsx)(n.code,{children:"get_tenant_plan_info"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,i.jsx)(n.code,{children:"getTenantPlanInfo"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"GetTenantPlanInfo"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"GetTenantPlanInfo"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"plan-list-retrieval-endpoint",children:"Plan List Retrieval Endpoint"}),"\n",(0,i.jsx)(n.h4,{id:"plan-change-select-box-implementation",children:"Plan Change Select Box Implementation"}),"\n",(0,i.jsxs)(n.p,{children:["Display plans that users can select in a select box.",(0,i.jsx)(n.br,{}),"\n","Use the plan list retrieved from this endpoint to build the UI."]}),"\n",(0,i.jsx)(n.h4,{id:"example-implementations-2",children:"Example Implementations"}),"\n",(0,i.jsx)(n.p,{children:"The following links point to repositories that include implementations of this endpoint.\nSearch by function name to locate the relevant code."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,i.jsx)(n.code,{children:"getPricingPlans"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,i.jsx)(n.code,{children:"get_pricing_plans"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,i.jsx)(n.code,{children:"getPricingPlans"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"GetPricingPlans"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"GetPricingPlans"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tax-rate-list-retrieval-endpoint",children:"Tax Rate List Retrieval Endpoint"}),"\n",(0,i.jsx)(n.h4,{id:"tax-rate-selection-select-box-implementation",children:"Tax Rate Selection Select Box Implementation"}),"\n",(0,i.jsxs)(n.p,{children:["Display available tax rates in a select box so users can select the tax rate to apply when changing plans.",(0,i.jsx)(n.br,{}),"\n","Use the tax rate list retrieved from this endpoint to build the UI."]}),"\n",(0,i.jsx)(n.h4,{id:"example-implementations-3",children:"Example Implementations"}),"\n",(0,i.jsx)(n.p,{children:"The following links point to repositories that include implementations of this endpoint.\nSearch by function name to locate the relevant code."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,i.jsx)(n.code,{children:"getTaxRates"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,i.jsx)(n.code,{children:"get_tax_rates"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,i.jsx)(n.code,{children:"getTaxRates"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"GetTaxRates"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"GetTaxRates"})})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"plan-change-execution-endpoint",children:"Plan Change Execution Endpoint"}),"\n",(0,i.jsx)(n.h4,{id:"operations-by-request-parameters",children:"Operations by Request Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["The following operations are possible with the same endpoint ",(0,i.jsx)(n.code,{children:"PUT /tenants/{tenantId}/plan"}),":"]}),"\n",(0,i.jsx)(n.h4,{id:"plan-change-reservation",children:"Plan Change Reservation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "nextPlanId": "plan-id",\n  "taxRateId": "tax-rate-id",\n  "usingNextPlanFrom": 1640995200\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"plan-cancellation",children:"Plan Cancellation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "nextPlanId": "",\n  "usingNextPlanFrom": 1640995200\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"reservation-cancellation",children:"Reservation Cancellation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:"{}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"backend-processing-logic",children:"Backend Processing Logic"}),"\n",(0,i.jsx)(r.A,{children:(0,i.jsx)(s.A,{value:"go",label:"Go",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'func updateTenantPlan(c echo.Context) error {\n    tenantId := c.Param("tenant_id")\n    if tenantId == "" {\n        return c.JSON(http.StatusBadRequest, echo.Map{"error": "tenant_id is required"})\n    }\n\n    var request UpdateTenantPlanRequest\n    if err := c.Bind(&request); err != nil {\n        return c.JSON(http.StatusBadRequest, echo.Map{"error": "Invalid request"})\n    }\n    nextPlanId := request.NextPlanId\n    taxRateId := request.TaxRateId\n    usingNextPlanFrom := request.UsingNextPlanFrom\n\n    userInfo, ok := c.Get(string(ctxlib.UserInfoKey)).(*authapi.UserInfo)\n    if !ok {\n        c.Logger().Error("failed to get user info")\n        return c.String(http.StatusInternalServerError, "internal server error")\n    }\n\n    // Check admin permissions\n    if !hasBillingAccess(userInfo, tenantId) {\n        return c.String(http.StatusForbidden, "Insufficient permissions")\n    }\n\n    // Update tenant plan\n    updateTenantPlanParam := authapi.UpdateTenantPlanParam{\n        NextPlanId: (*authapi.Uuid)(&nextPlanId),\n    }\n\n    // Set tax rate ID only if specified\n    if taxRateId != nil && *taxRateId != "" {\n        updateTenantPlanParam.NextPlanTaxRateId = (*authapi.Uuid)(taxRateId)\n    }\n\n    // Set using_next_plan_from only if specified\n    if usingNextPlanFrom != nil && *usingNextPlanFrom > 0 {\n        usingNextPlanFromInt := int(*usingNextPlanFrom)\n        updateTenantPlanParam.UsingNextPlanFrom = &usingNextPlanFromInt\n    }\n\n    resp, err := authClient.UpdateTenantPlanWithResponse(context.Background(), tenantId, updateTenantPlanParam)\n    if err != nil {\n        c.Logger().Errorf("failed to update tenant plan: %v", err)\n        return c.JSON(http.StatusInternalServerError, echo.Map{"error": "Failed to update tenant plan"})\n    }\n\n    // Check response status code\n    if resp.StatusCode() != http.StatusOK {\n        c.Logger().Errorf("tenant plan update failed with status %d: %s", resp.StatusCode(), string(resp.Body))\n        return c.JSON(resp.StatusCode(), echo.Map{"error": "Failed to update tenant plan"})\n    }\n\n    return c.JSON(http.StatusOK, echo.Map{"message": "Tenant plan updated successfully"})\n}\n'})})})}),"\n",(0,i.jsx)(n.h4,{id:"example-implementations-4",children:"Example Implementations"}),"\n",(0,i.jsx)(n.p,{children:"The following links point to repositories that include implementations of this endpoint.\nSearch by function name to locate the relevant code."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Go (Echo)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-go/blob/main/billing.go",children:(0,i.jsx)(n.code,{children:"updateTenantPlan"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python (FastAPI)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-python/blob/main/billing_router.py",children:(0,i.jsx)(n.code,{children:"update_tenant_plan"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Java (Spring)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-java/blob/main/src/main/java/implementsample/controller/BillingController.java",children:(0,i.jsx)(n.code,{children:"updateTenantPlan"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET 8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet8/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"UpdateTenantPlan"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"C# (.NET Framework 4.8)"}),": ",(0,i.jsx)(n.a,{href:"https://github.com/saasus-platform/implementation-sample-api-csharp/blob/main/SampleWebAppDotNet48/Controllers/BillingController.cs",children:(0,i.jsx)(n.code,{children:"UpdateTenantPlan"})})]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);