"use strict";(self.webpackChunksaasus_platform_document=self.webpackChunksaasus_platform_document||[]).push([[1625],{17092:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"part-4/mcp-server/environment-setup-guide","title":"Environment Setup Guide","description":"Overview","source":"@site/versioned_docs/version-1.11/part-4/mcp-server/environment-setup-guide.md","sourceDirName":"part-4/mcp-server","slug":"/part-4/mcp-server/environment-setup-guide","permalink":"/docs/part-4/mcp-server/environment-setup-guide","draft":false,"unlisted":false,"tags":[],"version":"1.11","frontMatter":{"title":"Environment Setup Guide","slug":"environment-setup-guide","excerpt":"","hidden":false,"createdAt":"Fri Jan 20 2023 01:47:47 GMT+0000 (Coordinated Universal Time)","updatedAt":"Wed May 22 2024 15:16:11 GMT+0000 (Coordinated Universal Time)"},"sidebar":"docsSidebar","previous":{"title":"Environment Information Acquisition Procedure","permalink":"/docs/part-4/mcp-server/clone-dev-settings"},"next":{"title":"User Behavior History Analysis Procedure","permalink":"/docs/part-4/mcp-server/user-behavior-analysis"}}');var s=r(74848),a=r(28453);const i={title:"Environment Setup Guide",slug:"environment-setup-guide",excerpt:"",hidden:!1,createdAt:"Fri Jan 20 2023 01:47:47 GMT+0000 (Coordinated Universal Time)",updatedAt:"Wed May 22 2024 15:16:11 GMT+0000 (Coordinated Universal Time)"},o="Environment Setup Guide",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Environment Creation",id:"environment-creation",level:2},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server",level:4},{value:"Tenant Creation",id:"tenant-creation",level:2},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-1",level:4},{value:"User Creation",id:"user-creation",level:2},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-2",level:4},{value:"Role Configuration",id:"role-configuration",level:2},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-3",level:4},{value:"Pricing Plan",id:"pricing-plan",level:2},{value:"Meter",id:"meter",level:3},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-4",level:4},{value:"Pricing Unit",id:"pricing-unit",level:3},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-5",level:4},{value:"Feature Menu",id:"feature-menu",level:3},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-6",level:4},{value:"Pricing Plan",id:"pricing-plan-1",level:3},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-7",level:4},{value:"Applying Rate Plans to Tenants",id:"applying-rate-plans-to-tenants",level:3},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-8",level:4},{value:"Deletion",id:"deletion",level:2},{value:"User and Tenant Deletion",id:"user-and-tenant-deletion",level:3},{value:"Request Message to MCP Server",id:"request-message-to-mcp-server-9",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Attribute Creation Errors",id:"attribute-creation-errors",level:4},{value:"API Key Errors",id:"api-key-errors",level:4},{value:"SaaSus API MCP Server Connection Errors",id:"saasus-api-mcp-server-connection-errors",level:4}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"environment-setup-guide",children:"Environment Setup Guide"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Before using the SaaSus API MCP Server, you need to configure the appropriate environment settings. This guide provides the procedure for creating basic SaaSus Platform settings using the SaaSus API MCP Server."}),"\n",(0,s.jsxs)(n.p,{children:["This procedure creates the necessary items for ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/prepare-saas-platform",children:"Settings Required Before Proceeding with the Tutorial"}),", ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/authentication-preference#creating-saas-user-tenants",children:"Creating SaaS User Tenants"}),", ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/authentication-preference#creating-saas-users",children:"Creating SaaS Users"}),", ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/manage-rate-plans/setting-measurement-units-function-menus-and-price-plans",children:"Pricing Plan Configuration Procedures"}),", and ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/manage-rate-plans/manage-rate-plans#applying-rate-plans-to-tenants",children:"Applying Rate Plans to Tenants"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Additionally, registration content can also be registered via CSV. This procedure uses the following expressions for clarity."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SaaSus Platform account"}),"\n",(0,s.jsx)(n.li,{children:"Appropriate API key and secret key"}),"\n",(0,s.jsx)(n.li,{children:"Node.js environment (v16 or higher)"}),"\n",(0,s.jsx)(n.li,{children:"SaaSus API MCP Server setup completed"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"environment-creation",children:"Environment Creation"}),"\n",(0,s.jsxs)(n.p,{children:["This procedure is based on ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/prepare-saas-platform",children:"Settings Required Before Proceeding with the Tutorial"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please create the following information in SaaSus Platform.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\n[User Attributes]\nAttribute Name: username\nDisplay Name: User Name\nType: string\n\n[Tenant Attributes]\nAttribute Name: memo\nDisplay Name: Memo\nType: string\n\n[Role]\nRole Name: user\nDisplay Name: General User\n"})}),"\n",(0,s.jsx)(n.h2,{id:"tenant-creation",children:"Tenant Creation"}),"\n",(0,s.jsxs)(n.p,{children:["This procedure is based on ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/authentication-preference#creating-saas-user-tenants",children:"Creating SaaS User Tenants"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-1",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please create the following tenant information in SaaSus Platform.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\nName: Tenant Sample 1\nMemo: This is attribute information defined by tenant attributes and can be set freely\nAdd Representative User: Create new user\nRepresentative Email Address: saasus-sample-tenant1@example.com\nRepresentative Password: Passw0rd!!\n\nName: Sample App Tenant 2\nMemo: This is attribute information defined by tenant attributes and can be set freely\nAdd Representative User: Create new user\nRepresentative Email Address: saasus-sample-tenant2@example.com\nRepresentative Password: Passw0rd!!\n"})}),"\n",(0,s.jsx)(n.h2,{id:"user-creation",children:"User Creation"}),"\n",(0,s.jsxs)(n.p,{children:["This procedure is based on ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/authentication-preference#creating-saas-users",children:"Creating SaaS Users"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-2",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please create the following user information in SaaSus Platform.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\nEmail Address: user1-1@example.com\nPassword: Passw0rd!!\nName: User 1-1\nTenant: Tenant Sample 1\n\nEmail Address: user1-2@example.com\nPassword: Passw0rd!!\nName: User 1-2\nTenant: Tenant Sample 1\n\nEmail Address: user2-1@example.com\nPassword: Passw0rd!!\nName: User 2-1\nTenant: Sample App Tenant 2\n\nEmail Address: user2-2@example.com\nPassword: Passw0rd!!\nName: User 2-2\nTenant: Sample App Tenant 2\n"})}),"\n",(0,s.jsx)(n.h2,{id:"role-configuration",children:"Role Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["This procedure is based on ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/part-5/adding-role-to-user",children:"Role Management"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-3",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Please create the following information in SaaSus Platform.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\nWhen setting multiple roles, they can be set separated by ",".\n\nTenant: Tenant Sample 1\nEmail Address: user1-1@example.com\nRole: user\n\nTenant: Tenant Sample 1\nEmail Address: user1-2@example.com\nRole: user\n\nTenant: Sample App Tenant 2\nEmail Address: user2-1@example.com\nRole: user\n\nTenant: Sample App Tenant 2\nEmail Address: user2-2@example.com\nRole: user\n'})}),"\n",(0,s.jsx)(n.h2,{id:"pricing-plan",children:"Pricing Plan"}),"\n",(0,s.jsxs)(n.p,{children:["This procedure is based on ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/manage-rate-plans/setting-measurement-units-function-menus-and-price-plans",children:"Pricing Plan Configuration Procedures"})," and ",(0,s.jsx)(n.a,{href:"https://docs.saasus.io/docs/tutorial/manage-rate-plans/manage-rate-plans#applying-rate-plans-to-tenants",children:"Applying Rate Plans to Tenants"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"meter",children:"Meter"}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-4",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please create the following meter units in SaaSus Platform.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\nMeter Unit Name: comment_count\nMeter Unit Display Name: Comment Count\nMeter Unit Description: Comment Count\n"})}),"\n",(0,s.jsx)(n.h3,{id:"pricing-unit",children:"Pricing Unit"}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-5",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please create the following pricing units in SaaSus Platform.\nSpecify unit as fixed: Fixed Unit, usage: Usage Unit, tiered: Tiered Unit, tiered_usage: Tiered Usage Unit\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\nUnit: fixed\nPricing Unit Name: basic_base\nPricing Unit Display Name: Basic Plan Base Fee\nPricing Unit Description: Basic Plan Base Fee\nAmount: 500\nRecurring Period: month\nCurrency: JPY\n\nUnit: usage\nPricing Unit Name: free_comment\nPricing Unit Display Name: Free Plan Comment Count\nPricing Unit Description: Free Plan Comment Count\nTarget Meter Name: comment_count\nUpper Limit: 10\nCurrency: JPY\n\nUnit: tiered_usage\nPricing Unit Name: basic_comment\nPricing Unit Display Name: Basic Plan Comment Count\nPricing Unit Description: Basic Plan Comment Count\nTarget Meter Name: comment_count\nAmount per Unit Usage: 0\nUpper Limit: 100\nCurrency: JPY\nUpper Limit: 10\nUnit Amount: 0\nFixed Amount: 500\nUpper Limit: 50\nUnit Amount: 0\nFixed Amount: 1000\nUpper Limit: -\nUnit Amount: 0\nFixed Amount: 1500\n"})}),"\n",(0,s.jsx)(n.h3,{id:"feature-menu",children:"Feature Menu"}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-6",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please create the following feature menus in SaaSus Platform.\nPricing units can be set multiple times separated by commas.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\nFeature Menu Name: basic_menu\nFeature Menu Display Name: Basic Plan Basic Menu\nFeature Menu Description: Basic Plan Basic Menu\nPricing Units: basic_base, basic_comment\n\nFeature Menu Name: free_menu\nFeature Menu Display Name: Free Plan Basic Menu\nFeature Menu Description: Free Plan Basic Menu\nPricing Units: free_comment\n"})}),"\n",(0,s.jsx)(n.h3,{id:"pricing-plan-1",children:"Pricing Plan"}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-7",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please create the following plans in SaaSus Platform.\nFeature menus can be set multiple times separated by commas.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\nPricing Plan Name: basic_plan\nPricing Plan Display Name: Basic Plan\nPricing Plan Description: Basic Plan\nFeature Menu: basic_menu\n\nPricing Plan Name: free_plan\nPricing Plan Display Name: Free Plan\nPricing Plan Description: Free Plan\nFeature Menu: free_menu\n"})}),"\n",(0,s.jsx)(n.h3,{id:"applying-rate-plans-to-tenants",children:"Applying Rate Plans to Tenants"}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-8",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Please create the following tax rate in SaaSus Platform.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\nTenant: Tenant Sample 1\nPricing Plan: free_plan\nReflection Date: Reflected immediately\n\nTenant: Sample App Tenant 2\nPricing Plan: basic_plan\nReflection Date: Reflected immediately\n\nInstructions:\nFirst, retrieve the tenant and pricing plan information. Then, update the tenant\'s pricing plan accordingly.\nWhen the Reflection Date is "Reflected immediately", make the request without setting the using_next_plan_from parameter.\n'})}),"\n",(0,s.jsx)(n.h2,{id:"deletion",children:"Deletion"}),"\n",(0,s.jsx)(n.h3,{id:"user-and-tenant-deletion",children:"User and Tenant Deletion"}),"\n",(0,s.jsx)(n.h4,{id:"request-message-to-mcp-server-9",children:"Request Message to MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Please delete the following items.\nAlso, when deleting a tenant, if the tenant's representative user is not assigned to other tenants,\nplease delete the representative user at the same time.\nIf an error occurs, stop creating subsequent items and output the executed content and error information.\n\n[User Attributes]\nAttribute Name: username\n\n[Tenant Attributes]\nAttribute Name: memo\n\n[Role]\nRole Name: user\n\n[Tenant]\nName: Tenant Sample 1\nName: Sample App Tenant 2\n\n[User]\nEmail Address: user1-1@example.com\nEmail Address: user1-2@example.com\nEmail Address: user2-1@example.com\nEmail Address: user2-2@example.com\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.h4,{id:"attribute-creation-errors",children:"Attribute Creation Errors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check if the attribute name contains invalid characters"}),"\n",(0,s.jsx)(n.li,{children:"Check if the same attribute name already exists"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"api-key-errors",children:"API Key Errors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify that the SaaSus Platform API key is correctly configured"}),"\n",(0,s.jsx)(n.li,{children:"Verify that the API key permissions are properly set"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"saasus-api-mcp-server-connection-errors",children:"SaaSus API MCP Server Connection Errors"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify that the SaaSus API MCP Server is running correctly"}),"\n",(0,s.jsx)(n.li,{children:"Verify that environment variables are correctly configured"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(96540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);