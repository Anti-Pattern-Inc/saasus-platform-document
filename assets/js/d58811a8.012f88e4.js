"use strict";(self.webpackChunksaasus_platform_document=self.webpackChunksaasus_platform_document||[]).push([[299],{59634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=t(74848),s=t(28453);const a={title:"Setup Guide",slug:"manual",excerpt:"",hidden:!1,createdAt:"Thu Oct 07 2024 19:00:00 GMT+0000 (Coordinated Universal Time)",updatedAt:"Thu Oct 07 2024 19:00:00 GMT+0000 (Coordinated Universal Time)"},r=void 0,o={id:"api-gateway-function/manual",title:"Setup Guide",description:"API Gateway Usage Guide",source:"@site/versioned_docs/version-1.11/api-gateway-function/manual.md",sourceDirName:"api-gateway-function",slug:"/api-gateway-function/manual",permalink:"/docs/api-gateway-function/manual",draft:!1,unlisted:!1,tags:[],version:"1.11",frontMatter:{title:"Setup Guide",slug:"manual",excerpt:"",hidden:!1,createdAt:"Thu Oct 07 2024 19:00:00 GMT+0000 (Coordinated Universal Time)",updatedAt:"Thu Oct 07 2024 19:00:00 GMT+0000 (Coordinated Universal Time)"},sidebar:"guideSidebar",previous:{title:"API Gateway Feature",permalink:"/docs/api-gateway-function/overview"}},l={},c=[{value:"API Gateway Usage Guide",id:"api-gateway-usage-guide",level:2},{value:"Step 1: Application for Use",id:"step-1-application-for-use",level:3},{value:"Step 2: Annotation Settings in the Source Code",id:"step-2-annotation-settings-in-the-source-code",level:3},{value:"Step 3: API Server Startup Configuration",id:"step-3-api-server-startup-configuration",level:3},{value:"Step 4: Integration and Compression of Source Code",id:"step-4-integration-and-compression-of-source-code",level:3},{value:"Step 5: Upload the ZIP File",id:"step-5-upload-the-zip-file",level:3},{value:"Step 6: Permission Settings",id:"step-6-permission-settings",level:3},{value:"Step 7: API Publishing and Access",id:"step-7-api-publishing-and-access",level:3},{value:"API Access Method",id:"api-access-method",level:4},{value:"Access Example",id:"access-example",level:4},{value:"Example",id:"example",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"api-gateway-usage-guide",children:"API Gateway Usage Guide"}),"\n",(0,i.jsx)(n.p,{children:"This document provides the setup steps for using the API Gateway feature of the SaaSus Platform to easily publish and manage APIs."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-1-application-for-use",children:"Step 1: Application for Use"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Access the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://docs.google.com/forms/d/e/1FAIpQLSftCXrCOH-19uoVyaziajuRSdvwCzdlteqK5xLxjvYs3Lz7Ww/viewform",children:"API Gateway Feature Beta Version Application Form"})})," and submit an application for use."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-2-annotation-settings-in-the-source-code",children:"Step 2: Annotation Settings in the Source Code"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Add annotations to the methods you want to publish to configure them as API endpoints."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-3-api-server-startup-configuration",children:"Step 3: API Server Startup Configuration"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["To enable the ",(0,i.jsx)(n.code,{children:"saasus-sdk"})," API server to start when the application launches, add the following code to the ",(0,i.jsx)(n.code,{children:"ServletInitializer"})," class."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"import saasus.sdk.util.apiserver.ApiServer;\n\n/**\n * PetClinic Spring Boot Application.\n *\n * @author Dave Syer\n *\n */\n@SpringBootApplication\n@ImportRuntimeHints(PetClinicRuntimeHints.class)\npublic class PetClinicApplication {\n\n\tpublic static void main(String[] args) {\n\n\t\ttry {\n\t\t\tApiServer.start(8083);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\n\t\tSpringApplication.run(PetClinicApplication.class, args);\n\t}\n\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Configure the ",(0,i.jsx)(n.strong,{children:"Application Load Balancer"})," with the following settings:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Listener"}),": Port ",(0,i.jsx)(n.strong,{children:"8083"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Target Group"}),": Create a target group for port ",(0,i.jsx)(n.strong,{children:"8083"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Security Group"}),": Allow access to port ",(0,i.jsx)(n.strong,{children:"8083"})," for both the ALB and the application"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-4-integration-and-compression-of-source-code",children:"Step 4: Integration and Compression of Source Code"}),"\n",(0,i.jsx)(n.p,{children:"Use the following shell script to compile and compress the relevant source code into a ZIP file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\n# Usage: $0 <directory>\n\nDIRECTORY=$1\nOUTPUT_FILE="generated_file_name.txt"\n\nif [ -f "$OUTPUT_FILE" ]; then\n    rm "$OUTPUT_FILE"\nfi\n\nfind "$DIRECTORY" -type f -name "*.java" -print0 | while IFS= read -r -d \'\' file; do\n    echo "===== $file =====" >> "$OUTPUT_FILE"\n    cat "$file" >> "$OUTPUT_FILE"\n    echo -e "\\n" >> "$OUTPUT_FILE"\ndone\n\nZIP_FILE="generated_file_name.zip"\nif [ -f "$ZIP_FILE" ]; then\n    rm "$ZIP_FILE"\nfi\n\nzip "$ZIP_FILE" "$OUTPUT_FILE"\necho "All Java files have been merged and zipped into $ZIP_FILE"\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ bash merge_java_files.sh <path_to_application>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ bash merge_java_files.sh src/main/java/org/springframework/samples/petclinic\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-5-upload-the-zip-file",children:"Step 5: Upload the ZIP File"}),"\n",(0,i.jsxs)(n.p,{children:["Go to the ",(0,i.jsx)(n.strong,{children:"API Gateway Feature screen"})," in the development console and upload the generated ZIP file."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-6-permission-settings",children:"Step 6: Permission Settings"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Go to the ",(0,i.jsx)(n.strong,{children:"Permission"})," tab and create the ",(0,i.jsx)(n.strong,{children:"CloudFormation for Assume Role"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Register the created ",(0,i.jsx)(n.strong,{children:"Role ARN"})," and ",(0,i.jsx)(n.strong,{children:"External ID"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Register the ",(0,i.jsx)(n.strong,{children:"VPC ID"})," and ",(0,i.jsx)(n.strong,{children:"Subnet IDs"})," for the VPC where you will create the PrivateLink (Network Load Balancer)."]}),"\n",(0,i.jsxs)(n.li,{children:["Register the ",(0,i.jsx)(n.strong,{children:"ALB ARN"})," of the Application Load Balancer."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Once these settings are complete, the infrastructure connecting SaaSus with your environment will be created."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"step-7-api-publishing-and-access",children:"Step 7: API Publishing and Access"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Publish the API to make it available for use."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"api-access-method",children:"API Access Method"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["An ",(0,i.jsx)(n.strong,{children:"API Key"})," is required to access the API. Generate an API Key from the ",(0,i.jsx)(n.strong,{children:"Tenant Management screen"})," in the operation console and use it to access the API."]}),"\n",(0,i.jsx)(n.li,{children:"As this is a beta version, domain information required for access will be sent via email by the SaaSus team."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"access-example",children:"Access Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ curl -v -X GET https://<domain>/<full_class_path>/<method_name> -H 'x-api-key:<issued_API_Key>' -H 'tenantId:<retrieved_tenantId>'\n"})}),"\n",(0,i.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"$ curl -v -X GET https://xxxxxxxxxxxxxxxxxxxxx/org.springframework.samples.petclinic.owner.FindFormApi/processFindFormApi -H 'x-api-key:azydsktcf1b93Mmjxuex7CEbEoV7OjrGk0RIqgzCQtc' -H 'tenantId:dc38a950-5203-4820-a325-418c0764ec69'\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(96540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);