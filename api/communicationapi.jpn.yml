openapi: 3.0.0
info:
  description: SaaSus Communication API Schema
  version: 1.0.0
  title: SaaSus Communication API Schema
  contact:
    name: Anti-Pattern
servers:
  - url: https://api.saasus.io/v1/communication
    description: Production API Server
tags:
  - name: feedback
    description: フィードバック
  - name: error
    description: テスト用途のエラー
security:
  - Bearer: []
paths:
  /feedbacks:
    post:
      tags:
        - feedback
      operationId: CreateFeedback
      summary: フィードバックを起票
      description: フィードバックを起票します。
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFeedbackParam"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - feedback
      operationId: GetFeedbacks
      summary: フィードバックの一覧を取得
      description: フィードバックの一覧を取得します。
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedbacks"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/feedbacks/{feedback_id}":
    patch:
      tags:
        - feedback
      operationId: UpdateFeedback
      summary: フィードバックの編集
      description: フィードバックの編集をします。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFeedbackParam"
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - feedback
      operationId: GetFeedback
      summary: フィードバックの取得
      description: フィードバックの取得をします。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feedback"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - feedback
      operationId: DeleteFeedback
      summary: フィードバックを削除
      description: フィードバックを削除します。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/feedbacks/{feedback_id}/status":
    patch:
      tags:
        - feedback
      operationId: UpdateFeedbackStatus
      summary: フィードバックのステータス更新
      description: フィードバックのステータスを更新します。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFeedbackStatusParam"
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/feedbacks/{feedback_id}/votes/users":
    post:
      tags:
        - feedback
      operationId: CreateVoteUser
      summary: フィードバックへの投票
      description: フィードバックへの投票をします。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateVoteUserParam"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Votes"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/feedbacks/{feedback_id}/votes/users/{user_id}":
    delete:
      tags:
        - feedback
      operationId: DeleteVoteForFeedback
      summary: フィードバックへの投票の取消
      description: フィードバックへの投票の取消をします。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
        - $ref: "#/components/parameters/UserId"
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/feedbacks/{feedback_id}/comments":
    post:
      tags:
        - feedback
      operationId: CreateFeedbackComment
      summary: フィードバックへのコメント投稿
      description: フィードバックへのコメントを投稿します。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFeedbackCommentParam"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/feedbacks/{feedback_id}/comments/{comment_id}":
    get:
      tags:
        - feedback
      operationId: GetFeedbackComment
      summary: フィードバックへのコメント取得
      description: フィードバックへのコメントを取得します。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
        - $ref: "#/components/parameters/CommentId"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
        - feedback
      operationId: UpdateFeedbackComment
      summary: フィードバックへのコメント編集
      description: フィードバックへのコメントを編集します。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
        - $ref: "#/components/parameters/CommentId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFeedbackCommentParam"
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - feedback
      operationId: DeleteFeedbackComment
      summary: フィードバックへのコメント削除
      description: フィードバックへのコメントを削除します。
      parameters:
        - $ref: "#/components/parameters/FeedbackId"
        - $ref: "#/components/parameters/CommentId"
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /errors/internal-server-error:
    get:
      tags:
        - error
      operationId: ReturnInternalServerError
      summary: ステータスコード500でサーバーエラーを返却
      description: |
        テスト用途で使用するエンドポイントです。ステータスコード500でサーバーエラーを返却します。
      responses:
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
  parameters:
    FeedbackId:
      in: path
      name: feedback_id
      schema:
        $ref: "#/components/schemas/Uuid"
      required: true
    CommentId:
      in: path
      name: comment_id
      schema:
        $ref: "#/components/schemas/Uuid"
      required: true
    UserId:
      in: path
      name: user_id
      schema:
        $ref: "#/components/schemas/Uuid"
      required: true
  schemas:
    Error:
      properties:
        type:
          type: string
          description: permission_denied
        message:
          type: string
          description: Error message
      required:
        - type
        - message
    Uuid:
      type: string
      example: 69e732d6-8ecc-45c4-c2eb-8438f7ffe775
    FeedbackSaveProps:
      type: object
      properties:
        feedback_title:
          title: フィードバックのタイトル
          type: string
          example: 保存ボタンの位置を変えてほしい
        feedback_description:
          title: フィードバックの内容
          type: string
          example: 編集ダイアログの保存ボタンが押しにくいので、位置を変えてほしい
      required:
        - feedback_title
        - feedback_description
    CreateFeedbackParam:
      title: フィードバック作成パラメータ
      allOf:
        - properties:
            user_id:
              $ref: "#/components/schemas/Uuid"
          required:
            - user_id
        - $ref: "#/components/schemas/FeedbackSaveProps"
    UpdateFeedbackParam:
      title: フィードバック作成パラメータ
      allOf:
        - $ref: "#/components/schemas/FeedbackSaveProps"
    Feedback:
      title: フィードバック
      type: object
      allOf:
        - properties:
            id:
              $ref: "#/components/schemas/Uuid"
            user_id:
              $ref: "#/components/schemas/Uuid"
            created_at:
              title: 投稿日付
              type: integer
              example: 1640995200
            status:
              $ref: "#/components/schemas/Status"
          required:
            - id
            - user_id
            - created_at
            - status
        - $ref: "#/components/schemas/FeedbackSaveProps"
        - $ref: "#/components/schemas/Comments"
        - $ref: "#/components/schemas/Votes"
    Comment:
      title: コメント
      type: object
      allOf:
        - properties:
            id:
              $ref: "#/components/schemas/Uuid"
            created_at:
              title: 投稿日付
              type: integer
              example: 1640995200
            body:
              title: コメント内容
              type: string
              example: 貴重なご意見ありがとうございます。
          required:
            - id
            - created_at
            - body
    User:
      title: 投票したユーザー
      type: object
      properties:
        user_id:
          $ref: "#/components/schemas/Uuid"
      required:
        - user_id
    Users:
      title: 投票したユーザー一覧
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
      required:
        - users
    Feedbacks:
      title: フィードバック一覧
      type: object
      properties:
        feedbacks:
          type: array
          items:
            $ref: "#/components/schemas/Feedback"
      required:
        - feedbacks
    Status:
      title: フィードバックのステータス
      type: integer
      x-go-type: uint64
      example: 1
    Comments:
      title: コメント一覧
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: "#/components/schemas/Comment"
      required:
        - comments
    Votes:
      title: 投票合計
      type: object
      allOf:
        - properties:
            count:
              title: フィードバックへの投票数
              type: integer
              x-go-type: uint64
              example: 1
          required:
            - count
        - $ref: "#/components/schemas/Users"
    UpdateFeedbackStatusParam:
      title: フィードバックのステータス編集パラメータ
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"
      required:
        - status
    CreateFeedbackCommentParam:
      title: フィードバックへのコメント投稿パラメータ
      type: object
      properties:
        body:
          title: コメント内容
          type: string
          example: 貴重なご意見ありがとうございます。
      required:
        - body
    UpdateFeedbackCommentParam:
      title: フィードバックへのコメント編集パラメータ
      type: object
      properties:
        body:
          title: 編集内容
          type: string
          example: 貴重なご意見ありがとうございます。
      required:
        - body
    CreateVoteUserParam:
      title: フィードバックへの投票パラメータ
      type: object
      properties:
        user_id:
          $ref: "#/components/schemas/Uuid"
      required:
        - user_id

