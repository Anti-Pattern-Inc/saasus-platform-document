AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template to create an RDS instance'

Parameters:
  DatabaseInstanceIdentifier:
    Type: String
    Default: 'mydbinstance'
  DbName:
    Type: String
    Default: 'mydb'
  DbUser:
    Type: String
    Default: 'admin'
  DbPass:
    Type: String
    NoEcho: true
  DatabaseInstanceClass:
    Type: String
    Default: 'db.t3.micro'
  DatabaseAllocatedStorage:
    Type: Number
    Default: 20
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
#   TenantId:
#     Type: String

Resources:
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'Subnet group for RDS instance'
      SubnetIds: !Ref SubnetIds

  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
    #   DBInstanceIdentifier: <stack-name>-<logical-id>-<random-string>
    #   DBInstanceIdentifier: !Sub "${TenantId}-${DbName}"
      DBName: !Ref DbName
      Engine: 'mysql'
      EngineVersion: '8.0.35'
      MasterUsername: !Ref DbUser
      MasterUserPassword: !Ref DbPass
      DBInstanceClass: !Ref DatabaseInstanceClass
      AllocatedStorage: !Ref DatabaseAllocatedStorage
      PubliclyAccessible: false
      StorageType: gp2
      BackupRetentionPeriod: 7
      PreferredBackupWindow: '01:00-02:00'
      PreferredMaintenanceWindow: 'Sun:03:00-Sun:04:00'
      VPCSecurityGroups: !Ref SecurityGroupIds
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      Port: 3306

Outputs:
  DbHost:
    Description: 'The connection endpoint for the RDS instance'
    Value: !GetAtt MyDBInstance.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-DbHost"
  DbPort:
    Description: 'The port on which the database accepts connections'
    Value: 3306
    Export:
      Name: !Sub "${AWS::StackName}-DbPort"
  DbType:
    Description: 'The database engine type'
    Value: 'mysql'
    Export:
      Name: !Sub "${AWS::StackName}-DbType"
  AccountId:
    Description: 'AWS Account ID'
    Value: !Sub '${AWS::AccountId}'
    Export:
      Name: !Sub "${AWS::StackName}-AccountId"
  DbUser:
    Description: 'Username for the database'
    Value: !Ref DbUser
    Export:
      Name: !Sub "${AWS::StackName}-DbUser"
  DbName:
    Description: 'Name of the database'
    Value: !Ref DbName
    Export:
      Name: !Sub "${AWS::StackName}-DbName"
  SubnetIds:
    Description: 'List of subnet IDs used by the database'
    Value: !Join [ ", ", !Ref SubnetIds ]
    Export:
      Name: !Sub "${AWS::StackName}-SubnetIds"
  SecurityGroupIds:
    Description: 'List of security group IDs assigned to the database'
    Value: !Join [ ", ", !Ref SecurityGroupIds ]
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroupIds"
