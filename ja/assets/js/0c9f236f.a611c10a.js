"use strict";(self.webpackChunksaasus_platform_document=self.webpackChunksaasus_platform_document||[]).push([[5540],{28453:(n,t,e)=>{e.d(t,{R:()=>s,x:()=>u});var i=e(96540);const a={},r=i.createContext(a);function s(n){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function u(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),i.createElement(r.Provider,{value:t},n.children)}},65537:(n,t,e)=>{e.d(t,{A:()=>f});var i=e(96540),a=e(34164),r=e(65627),s=e(56347),u=e(50372),o=e(30604),c=e(11861),d=e(78749);function m(n){return i.Children.toArray(n).filter((n=>"\n"!==n)).map((n=>{if(!n||(0,i.isValidElement)(n)&&function(n){const{props:t}=n;return!!t&&"object"==typeof t&&"value"in t}(n))return n;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof n.type?n.type:n.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(n){const{values:t,children:e}=n;return(0,i.useMemo)((()=>{const n=t??function(n){return m(n).map((n=>{let{props:{value:t,label:e,attributes:i,default:a}}=n;return{value:t,label:e,attributes:i,default:a}}))}(e);return function(n){const t=(0,c.XI)(n,((n,t)=>n.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((n=>n.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(n),n}),[t,e])}function l(n){let{value:t,tabValues:e}=n;return e.some((n=>n.value===t))}function g(n){let{queryString:t=!1,groupId:e}=n;const a=(0,s.W6)(),r=function(n){let{queryString:t=!1,groupId:e}=n;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:t,groupId:e});return[(0,o.aZ)(r),(0,i.useCallback)((n=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,n),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(n){const{defaultValue:t,queryString:e=!1,groupId:a}=n,r=p(n),[s,o]=(0,i.useState)((()=>function(n){let{defaultValue:t,tabValues:e}=n;if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!l({value:t,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${e.map((n=>n.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=e.find((n=>n.default))??e[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:r}))),[c,m]=g({queryString:e,groupId:a}),[h,C]=function(n){let{groupId:t}=n;const e=function(n){return n?`docusaurus.tab.${n}`:null}(t),[a,r]=(0,d.Dv)(e);return[a,(0,i.useCallback)((n=>{e&&r.set(n)}),[e,r])]}({groupId:a}),y=(()=>{const n=c??h;return l({value:n,tabValues:r})?n:null})();(0,u.A)((()=>{y&&o(y)}),[y]);return{selectedValue:s,selectValue:(0,i.useCallback)((n=>{if(!l({value:n,tabValues:r}))throw new Error(`Can't select invalid tab value=${n}`);o(n),m(n),C(n)}),[m,C,r]),tabValues:r}}var C=e(9136);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=e(74848);function A(n){let{className:t,block:e,selectedValue:i,selectValue:s,tabValues:u}=n;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=n=>{const t=n.currentTarget,e=o.indexOf(t),a=u[e].value;a!==i&&(c(t),s(a))},m=n=>{let t=null;switch(n.key){case"Enter":d(n);break;case"ArrowRight":{const e=o.indexOf(n.currentTarget)+1;t=o[e]??o[0];break}case"ArrowLeft":{const e=o.indexOf(n.currentTarget)-1;t=o[e]??o[o.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":e},t),children:u.map((n=>{let{value:t,label:e,attributes:r}=n;return(0,x.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:n=>{o.push(n)},onKeyDown:m,onClick:d,...r,className:(0,a.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":i===t}),children:e??t},t)}))})}function M(n){let{lazy:t,children:e,selectedValue:r}=n;const s=(Array.isArray(e)?e:[e]).filter(Boolean);if(t){const n=s.find((n=>n.props.value===r));return n?(0,i.cloneElement)(n,{className:(0,a.A)("margin-top--md",n.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((n,t)=>(0,i.cloneElement)(n,{key:t,hidden:n.props.value!==r})))})}function _(n){const t=h(n);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",y.tabList),children:[(0,x.jsx)(A,{...t,...n}),(0,x.jsx)(M,{...t,...n})]})}function f(n){const t=(0,C.A)();return(0,x.jsx)(_,{...n,children:m(n.children)},String(t))}},79097:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"part-6/implementation-guide/meteringapisamplelaravelandusecase","title":"\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0API\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u3068\u4f7f\u7528\u4f8b","description":"SDK\u3092\u4f7f\u7528\u3057\u305f\u5404\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0API\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u3068\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0API\u3092\u5229\u7528\u3057\u305f\u6a5f\u80fd\u306e\u4e00\u4f8b\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002","source":"@site/i18n/ja/docusaurus-plugin-content-docs/version-1.11/part-6/implementation-guide/meteringapisamplelaravelandusecase.md","sourceDirName":"part-6/implementation-guide","slug":"/part-6/implementation-guide/metering-api-sample","permalink":"/ja/docs/part-6/implementation-guide/metering-api-sample","draft":false,"unlisted":false,"tags":[],"version":"1.11","frontMatter":{"title":"\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0API\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u3068\u4f7f\u7528\u4f8b","slug":"metering-api-sample","excerpt":"","hidden":false,"createdAt":"Tue Nov 14 2023 06:22:12 GMT+0000 (Coordinated Universal Time)","updatedAt":"Wed Dec 27 2023 09:00:19 GMT+0000 (Coordinated Universal Time)"},"sidebar":"docsSidebar","previous":{"title":"\u8ab2\u91d1\u60c5\u5831\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u5b9f\u88c5\u30ac\u30a4\u30c9","permalink":"/ja/docs/part-6/implementation-guide/billing-dashboard-with-metering-api"},"next":{"title":"\u591a\u8981\u7d20\u8a8d\u8a3c\u306e\u5b9f\u88c5\uff08API\u30b5\u30fc\u30d0\uff09","permalink":"/ja/docs/part-6/implementation-guide/implementing-multi-factor-authentication-apiserver"}}');var a=e(74848),r=e(28453),s=e(65537),u=e(79329);const o={title:"\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0API\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u3068\u4f7f\u7528\u4f8b",slug:"metering-api-sample",excerpt:"",hidden:!1,createdAt:"Tue Nov 14 2023 06:22:12 GMT+0000 (Coordinated Universal Time)",updatedAt:"Wed Dec 27 2023 09:00:19 GMT+0000 (Coordinated Universal Time)"},c="\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",d={},m=[{value:"\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",id:"\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-1",level:3},{value:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0",id:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-1",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-2",level:3},{value:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664",id:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-2",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-3",level:3},{value:"\u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",id:"\u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-3",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-4",level:3},{value:"\u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0",id:"\u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-4",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-5",level:3},{value:"\u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",id:"\u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-5",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-6",level:3},{value:"\u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",id:"\u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-6",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-7",level:3},{value:"\u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",id:"\u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-7",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-8",level:3},{value:"\u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",id:"\u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-8",level:3},{value:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-9",level:3}];function p(n){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"SDK\u3092\u4f7f\u7528\u3057\u305f\u5404\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0API\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u3068\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0API\u3092\u5229\u7528\u3057\u305f\u6a5f\u80fd\u306e\u4e00\u4f8b\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(t.p,{children:"\u305d\u308c\u305e\u308c\u306eAPI\u306e\u8a73\u7d30\u306fAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"})}),"\n",(0,a.jsx)(t.h2,{id:"\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",children:"\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/GetMeteringUnitDateCountByTenantIdAndUnitNameAndDate",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u30c6\u30ca\u30f3\u30c8\u5411\u3051\u306b\u4f7f\u7528\u91cf\u3092\u898b\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-1",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",metastring:"PHP",children:"/**\n * \u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $meteringUnitName \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n * @param string $date \u65e5\u4ed8 yyyy-mm-dd\u5f62\u5f0f\n * @return array\n */\npublic function getCountOfSpecifiedDate(string $tenantId, string $meteringUnitName, string $date)\n{\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $unitCount = $pricingApi->getMeteringUnitDateCountByTenantIdAndUnitNameAndDate(\n        $tenantId,\n        $meteringUnitName,\n        $date\n    );\n  \n    return [\n        'count' => $unitCount->getCount(),\n        'date' => $unitCount->getDate(),\n        'meteringUnitName' => $unitCount->getMeteringUnitName(),\n    ];\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// date: yyyy-MM-dd\u5f62\u5f0f\u306e\u65e5\u4ed8\n// returns: {"count": int, "date": string, "meteringUnitName": string}\nfunc getCountOfSpecifiedDate(c echo.Context) error {\n    tenantId := c.Param("tenantId")\n    unit := c.Param("unit")\n    date := c.Param("date")\n\n    resp, err := pricingClient.\n        GetMeteringUnitDateCountByTenantIdAndUnitNameAndDateWithResponse(\n            c.Request().Context(), tenantId, unit, date,\n        )\n    if err != nil || resp.JSON200 == nil {\n        return c.String(http.StatusInternalServerError, "pricing API error")\n    }\n\n    return c.JSON(http.StatusOK, echo.Map{\n        "count":            resp.JSON200.Count,\n        "date":             resp.JSON200.Date,\n        "meteringUnitName": resp.JSON200.MeteringUnitName,\n    })\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n# date: yyyy-MM-dd\u5f62\u5f0f\u306e\u65e5\u4ed8\n# returns: {"count": int, "date": str, "meteringUnitName": str}\ndef get_count_of_specified_date(tenant_id: str, unit: str, date: str) -> Dict:\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    cnt = metering_api.get_metering_unit_date_count_by_tenant_id_and_unit_name_and_date(\n        tenant_id=tenant_id,\n        metering_unit_name=unit,\n        var_date=date,\n    )\n    return {\n        "count": cnt.count,\n        "date": cnt.var_date,\n        "meteringUnitName": cnt.metering_unit_name,\n    }\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// date: yyyy-MM-dd\u5f62\u5f0f\u306e\u65e5\u4ed8\n@GetMapping("/tenants/{tenant_id}/metering/{unit:^(?!date$|month$).+}/date/{date}/count")\npublic ResponseEntity<?> getUnitDateCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String unit,\n        @PathVariable String date\n) {\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        MeteringUnitDateCount cnt = meteringApi\n            .getMeteringUnitDateCountByTenantIdAndUnitNameAndDate(tenantId, unit, date);\n\n        Map<String, Object> resp = new HashMap<>();\n        resp.put("count", cnt.getCount());\n        resp.put("date", cnt.getDate());\n        resp.put("meteringUnitName", cnt.getMeteringUnitName());\n        return ResponseEntity.ok(resp);\n\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="date">\u65e5\u4ed8 (yyyy-MM-dd)</param>\n/// <returns>JSON { count:int, date:string, meteringUnitName:string }</returns>\napp.MapGet("/tenants/{tenant_id}/metering/{unit}/date/{date}/count",\n    async (HttpContext context, string tenant_id, string unit, string date) =>\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitDateCountByTenantIdAndUnitNameAndDateAsync(\n            tenant_id, unit, date);\n        return Results.Json(new {\n            count            = cnt.Count,\n            date             = cnt.Date,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="date">\u65e5\u4ed8 (yyyy-MM-dd)</param>\n/// <returns>JSON { count:int, date:string, meteringUnitName:string }</returns>\n[HttpGet]\n[Route("tenants/{tenant_id}/metering/{unit}/date/{date}/count")]\npublic async Task<IHttpActionResult> GetUnitDateCount(\n    string tenant_id,\n    string unit,\n    string date)\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitDateCountByTenantIdAndUnitNameAndDateAsync(\n            tenant_id, unit, date);\n        return Ok(new\n        {\n            count            = cnt.Count,\n            date             = cnt.Date,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0",children:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/UpdateMeteringUnitTimestampCount",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-1",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u904e\u53bb\u306e\u30c7\u30fc\u30bf\u3067\u4f7f\u7528\u91cf\u306e\u66f4\u65b0\u30df\u30b9\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u8abf\u6574\u3059\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-2",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $meteringUnitName \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n * @param int $timestamp \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 \u79d2\u307e\u3067\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n * @param Request $request\n * @return array\n */\npublic function updateCountOfSpecifiedTimestamp(string $tenantId, string $meteringUnitName, int $timestamp, Request $request)\n{\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u66f4\u65b0\u65b9\u6cd5\u3068\u4ef6\u6570\u3092\u53d6\u5f97\n    ['method' => $method, 'count' => $count] = $request->only(['method', 'count']);\n    $updateMeteringUnitTimeStampParam = new UpdateMeteringUnitTimestampCountParam();\n    $updateMeteringUnitTimeStampParam->setMethod($method)\n        ->setCount($count);\n    $unitCount = $this->saasusClient->getPricingClient()->updateMeteringUnitTimestampCount(\n        $tenantId, $meteringUnitName, $timestamp,\n        $updateMeteringUnitTimeStampParam\n    );\n  \n    return [\n        'count' => $unitCount->getCount(),\n        'timestamp' => $unitCount->getTimestamp(),\n        'meteringUnitName' => $unitCount->getMeteringUnitName(),\n     ];\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// ts: \u79d2\u307e\u3067\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n// body: {"method": "add|sub|direct", "count": int}\n// returns: {"count": int, "timestamp": int, "meteringUnitName": string}\nfunc updateCountOfSpecifiedTS(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tunit := c.Param("unit")\n\tts, err := strconv.ParseInt(c.Param("ts"), 10, 64)\n\tif err != nil {\n\t\treturn c.String(http.StatusBadRequest, "timestamp must be int")\n\t}\n\n\tvar body struct {\n\t\tMethod string `json:"method"` // add | sub | direct\n\t\tCount  int    `json:"count"`\n\t}\n\tif err := c.Bind(&body); err != nil {\n\t\treturn c.String(http.StatusBadRequest, "invalid body")\n\t}\n\n\tmethod := pricingapi.UpdateMeteringUnitTimestampCountMethod(body.Method)\n\tswitch method {\n\tcase pricingapi.Add, pricingapi.Sub, pricingapi.Direct:\n\tdefault:\n\t\treturn c.String(http.StatusBadRequest, "method must be add/sub/direct")\n\t}\n\n\tparam := pricingapi.UpdateMeteringUnitTimestampCountParam{Method: method, Count: body.Count}\n\n\tresp, err := pricingClient.\n\t\tUpdateMeteringUnitTimestampCountWithResponse(\n\t\t\tc.Request().Context(), tenantId, unit, int(ts), param)\n\tif err != nil || resp.JSON200 == nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\treturn c.JSON(http.StatusOK, resp.JSON200)\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n# ts: timestamp (\u79d2)\n# req: UpdateCountRequest(method="add|sub|direct", count=int)\n# returns: UpdateMeteringUnitTimestampCountParam response model\ndef update_count_of_specified_ts(tenant_id: str, unit: str, ts: int, req: UpdateCountRequest):\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    param = UpdateMeteringUnitTimestampCountParam(\n        method=UpdateMeteringUnitTimestampCountMethod(req.method),\n        count=req.count,\n    )\n    return metering_api.update_metering_unit_timestamp_count(\n        tenant_id=tenant_id,\n        metering_unit_name=unit,\n        timestamp=ts,\n        update_metering_unit_timestamp_count_param=param,\n    )\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// ts: \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\uff08\u79d2\uff09\n// body: {"method":"add|sub|direct","count":int}\n@PutMapping("/tenants/{tenant_id}/metering/{unit}/timestamp/{ts}/count")\npublic ResponseEntity<?> updateUnitTimestampCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String unit,\n        @PathVariable long ts,\n        @RequestBody Map<String,Object> body\n) {\n    String method = (String) body.get("method");\n    Object cntVal = body.get("count");\n    if (!Arrays.asList("add","sub","direct").contains(method) || !(cntVal instanceof Number)) {\n        throw new ResponseStatusException(HttpStatus.BAD_REQUEST,\n            "request body must include method(add/sub/direct) & count(int)");\n    }\n\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        UpdateMeteringUnitTimestampCountParam param = new UpdateMeteringUnitTimestampCountParam()\n            .method(UpdateMeteringUnitTimestampCountMethod.fromValue(method))\n            .count(((Number)cntVal).intValue());\n\n        MeteringUnitTimestampCount res = meteringApi\n            .updateMeteringUnitTimestampCount(tenantId, unit, (int) ts, param);\n\n        return ResponseEntity.ok(res.toJson());\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u6307\u5b9a\u3067\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="ts">\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 (\u79d2)</param>\n/// <param name="body">{"method":"add|sub|direct","count":int}</param>\n/// <returns>\u66f4\u65b0\u5f8c\u306e MeteringUnitTimestampCount \u30aa\u30d6\u30b8\u30a7\u30af\u30c8</returns>\napp.MapPut("/tenants/{tenant_id}/metering/{unit}/timestamp/{ts}/count",\n    async (HttpContext context, string tenant_id, string unit, int ts, JsonElement body) =>\n{\n    try\n    {\n        var method = body.GetProperty("method").GetString()!;\n        var count  = body.GetProperty("count").GetInt32();\n        if (!new[] { "add", "sub", "direct" }.Contains(method))\n            return Results.BadRequest("method \u306f add|sub|direct \u306e\u3044\u305a\u308c\u304b\u3002");\n\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var param = new UpdateMeteringUnitTimestampCountParam(\n            method: Enum.Parse<UpdateMeteringUnitTimestampCountMethod>(method, true),\n            count:  count\n        );\n        var res = await metering.UpdateMeteringUnitTimestampCountAsync(\n            tenant_id, unit, ts, param);\n        return Results.Json(res);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u6307\u5b9a\u3067\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="ts">\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 (\u79d2)</param>\n/// <param name="body">{"method":"add|sub|direct","count":int}</param>\n/// <returns>\u66f4\u65b0\u5f8c\u306e MeteringUnitTimestampCount \u30aa\u30d6\u30b8\u30a7\u30af\u30c8</returns>\n[HttpPut]\n[Route("tenants/{tenant_id}/metering/{unit}/timestamp/{ts}/count")]\npublic async Task<IHttpActionResult> UpdateUnitTimestampCount(\n    string tenant_id,\n    string unit,\n    int ts,\n    [FromBody] UpdateRequestBody body)\n{\n    if (body == null || !new[] { "add", "sub", "direct" }.Contains(body.method))\n        return BadRequest("body must include method(add/sub/direct) & count(int)");\n\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var param = new UpdateMeteringUnitTimestampCountParam(\n            method: (UpdateMeteringUnitTimestampCountMethod)Enum.Parse(\n                typeof(UpdateMeteringUnitTimestampCountMethod), body.method, true),\n            count: body.count\n        );\n        var res = await metering.UpdateMeteringUnitTimestampCountAsync(\n            tenant_id, unit, ts, param);\n        return Ok(res);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664",children:"\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/DeleteMeteringUnitTimestampCount",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-2",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u904e\u53bb\u306e\u30c7\u30fc\u30bf\u3067\u4f7f\u7528\u91cf\u306e\u66f4\u65b0\u30df\u30b9\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u8abf\u6574\u3059\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-3",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $meteringUnitName \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n * @param int $timestamp \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 \u79d2\u307e\u3067\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n * @return array\n */\npublic function deleteCountOfSpecifiedTimestamp(string $tenantId, string $meteringUnitName, int $timestamp)\n{\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $pricingApi->deleteMeteringUnitTimestampCount(\n        $tenantId, $meteringUnitName, $timestamp\n    );\n\n    return ['status' => 'success'];\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// ts: \u79d2\u307e\u3067\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n// returns: {"status":"success"}\nfunc deleteCountOfSpecifiedTS(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tunit := c.Param("unit")\n\tts, err := strconv.ParseInt(c.Param("ts"), 10, 64)\n\tif err != nil {\n\t\treturn c.String(http.StatusBadRequest, "timestamp must be int")\n\t}\n\n\t_, err = pricingClient.\n\t\tDeleteMeteringUnitTimestampCountWithResponse(\n\t\t\tc.Request().Context(), tenantId, unit, int(ts))\n\tif err != nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\treturn c.JSON(http.StatusOK, echo.Map{"status": "success"})\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n# ts: timestamp (\u79d2)\n# returns: {"status": "success"}\ndef delete_count_of_specified_ts(tenant_id: str, unit: str, ts: int) -> Dict:\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    metering_api.delete_metering_unit_timestamp_count(\n        tenant_id=tenant_id,\n        metering_unit_name=unit,\n        timestamp=ts,\n    )\n    return {"status": "success"}\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// ts: \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\uff08\u79d2\uff09\n@DeleteMapping("/tenants/{tenant_id}/metering/{unit}/timestamp/{ts}/count")\npublic ResponseEntity<?> deleteUnitTimestampCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String unit,\n        @PathVariable long ts\n) {\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        meteringApi.deleteMeteringUnitTimestampCount(tenantId, unit, (int) ts);\n\n        Map<String,String> resp = new HashMap<>();\n        resp.put("status", "success");\n        return ResponseEntity.ok(resp);\n\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u6307\u5b9a\u3067\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="ts">\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 (\u79d2)</param>\n/// <returns>{ "status":"success" }</returns>\napp.MapDelete("/tenants/{tenant_id}/metering/{unit}/timestamp/{ts}/count",\n    async (HttpContext context, string tenant_id, string unit, int ts) =>\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        await metering.DeleteMeteringUnitTimestampCountAsync(tenant_id, unit, ts);\n        return Results.Json(new { status = "success" });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u6307\u5b9a\u3067\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u524a\u9664\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="ts">\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 (\u79d2)</param>\n/// <returns>{ "status":"success" }</returns>\n[HttpDelete]\n[Route("tenants/{tenant_id}/metering/{unit}/timestamp/{ts}/count")]\npublic async Task<IHttpActionResult> DeleteUnitTimestampCount(\n    string tenant_id,\n    string unit,\n    int ts)\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        await metering.DeleteMeteringUnitTimestampCountAsync(tenant_id, unit, ts);\n        return Ok(new { status = "success" });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",children:"\u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/GetMeteringUnitDateCountByTenantIdAndUnitNameToday",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-3",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u30c6\u30ca\u30f3\u30c8\u5411\u3051\u306b\u4f7f\u7528\u91cf\u3092\u898b\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-4",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $meteringUnitName \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n * @return array\n */\npublic function getCountOfCurrentDay(string $tenantId, string $meteringUnitName)\n{\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $unitCount = $pricingApi->getMeteringUnitDateCountByTenantIdAndUnitNameToday(\n        $tenantId, $meteringUnitName\n    );\n\n    return [\n        'count' => $unitCount->getCount(),\n        'date' => $unitCount->getDate(),\n        'meteringUnitName' => $unitCount->getMeteringUnitName(),\n    ];\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// returns: {"count": int, "date": string, "meteringUnitName": string}\nfunc getCountOfCurrentDay(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tunit := c.Param("unit")\n\n\tresp, err := pricingClient.\n\t\tGetMeteringUnitDateCountByTenantIdAndUnitNameTodayWithResponse(\n\t\t\tc.Request().Context(), tenantId, unit)\n\tif err != nil || resp.JSON200 == nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\treturn c.JSON(http.StatusOK, echo.Map{\n\t\t"count":            resp.JSON200.Count,\n\t\t"date":             resp.JSON200.Date,\n\t\t"meteringUnitName": resp.JSON200.MeteringUnitName,\n\t})\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n# returns: {"count": int, "date": str, "meteringUnitName": str}\ndef get_count_of_current_day(tenant_id: str, unit: str) -> Dict:\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    cnt = metering_api.get_metering_unit_date_count_by_tenant_id_and_unit_name_today(\n      tenant_id=tenant_id,\n      metering_unit_name=unit,\n    )\n    return {\n        "count": cnt.count,\n        "date": cnt.var_date,\n        "meteringUnitName": cnt.metering_unit_name,\n    }\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n@GetMapping("/tenants/{tenant_id}/metering/{unit:^(?!date$|month$).+}/date/today/count")\npublic ResponseEntity<?> getUnitTodayCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String unit\n) {\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        MeteringUnitDateCount cnt = meteringApi\n            .getMeteringUnitDateCountByTenantIdAndUnitNameToday(tenantId, unit);\n\n        Map<String, Object> resp = new HashMap<>();\n        resp.put("count", cnt.getCount());\n        resp.put("date", cnt.getDate());\n        resp.put("meteringUnitName", cnt.getMeteringUnitName());\n        return ResponseEntity.ok(resp);\n\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <returns>JSON { count:int, date:string, meteringUnitName:string }</returns>\napp.MapGet("/tenants/{tenant_id}/metering/{unit}/date/today/count",\n    async (HttpContext context, string tenant_id, string unit) =>\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitDateCountByTenantIdAndUnitNameTodayAsync(\n            tenant_id, unit);\n        return Results.Json(new {\n            count            = cnt.Count,\n            date             = cnt.Date,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u5f53\u65e5\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <returns>JSON { count:int, date:string, meteringUnitName:string }</returns>\n[HttpGet]\n[Route("tenants/{tenant_id}/metering/{unit}/date/today/count")]\npublic async Task<IHttpActionResult> GetUnitTodayCount(\n    string tenant_id,\n    string unit)\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitDateCountByTenantIdAndUnitNameTodayAsync(\n            tenant_id, unit);\n        return Ok(new\n        {\n            count            = cnt.Count,\n            date             = cnt.Date,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0",children:"\u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/UpdateMeteringUnitTimestampCountNow",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-4",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u30e6\u30fc\u30b6\u30fc\u6570\u7b49\u306e\u4f7f\u7528\u91cf\u306e\u5909\u66f4\u304c\u767a\u751f\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u7b49\u3001\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\u3059\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-5",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n * \n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $meteringUnitName \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n * @param Request $request\n * @return array\n */\npublic function updateCountOfNow(string $tenantId, string $meteringUnitName, Request $request)\n{\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u66f4\u65b0\u65b9\u6cd5\u3068\u4ef6\u6570\u3092\u53d6\u5f97\n    ['method' => $method, 'count' => $count] = $request->only(['method', 'count']);\n    $updateMeteringUnitTimeStampNowParam = new UpdateMeteringUnitTimestampCountNowParam();\n    $updateMeteringUnitTimeStampNowParam->setMethod($method)\n        ->setCount($count);\n\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $count = $pricingApi->updateMeteringUnitTimestampCountNow(\n        $tenantId, $meteringUnitName, $updateMeteringUnitTimeStampNowParam\n    );\n\n    return [\n        'count' => $count->getCount(),\n        'timestamp' => $count->getTimestamp(),\n        'meteringUnitName' => $count->getMeteringUnitName(),\n    ];\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// body: {"method": "add|sub|direct", "count": int}\n// returns: {"count": int, "timestamp": int, "meteringUnitName": string}\nfunc updateCountOfNow(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tunit := c.Param("unit")\n\n\tvar body struct {\n\t\tMethod string `json:"method"`\n\t\tCount  int    `json:"count"`\n\t}\n\tif err := c.Bind(&body); err != nil {\n\t\treturn c.String(http.StatusBadRequest, "invalid body")\n\t}\n\n\tmethod := pricingapi.UpdateMeteringUnitTimestampCountMethod(body.Method)\n\tswitch method {\n\tcase pricingapi.Add, pricingapi.Sub, pricingapi.Direct:\n\tdefault:\n\t\treturn c.String(http.StatusBadRequest, "method must be add/sub/direct")\n\t}\n\n\tparam := pricingapi.UpdateMeteringUnitTimestampCountNowParam{Method: method, Count: body.Count}\n\n\tresp, err := pricingClient.\n\t\tUpdateMeteringUnitTimestampCountNowWithResponse(\n\t\t\tc.Request().Context(), tenantId, unit, param)\n\tif err != nil || resp.JSON200 == nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\treturn c.JSON(http.StatusOK, resp.JSON200)\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n# req: UpdateCountRequest(method="add|sub|direct", count=int)\n# returns: UpdateMeteringUnitTimestampCountNowParam response model\ndef update_count_of_now(tenant_id: str, unit: str, req: UpdateCountRequest):\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    param = UpdateMeteringUnitTimestampCountNowParam(\n        method=UpdateMeteringUnitTimestampCountMethod(req.method),\n        count=req.count,\n    )\n    return metering_api.update_metering_unit_timestamp_count_now(\n        tenant_id=tenant_id,\n        metering_unit_name=unit,\n        update_metering_unit_timestamp_count_now_param=param,\n    )\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u73fe\u5728\u6642\u523b\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// body: {"method":"add|sub|direct","count":int}\n@PutMapping("/tenants/{tenant_id}/metering/{unit}/timestamp/now/count")\npublic ResponseEntity<?> updateUnitNowCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String unit,\n        @RequestBody Map<String,Object> body\n) {\n    String method = (String) body.get("method");\n    Object cntVal = body.get("count");\n    if (!Arrays.asList("add","sub","direct").contains(method) || !(cntVal instanceof Number)) {\n        throw new ResponseStatusException(HttpStatus.BAD_REQUEST,\n            "request body must include method(add/sub/direct) & count(int)");\n    }\n\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        UpdateMeteringUnitTimestampCountNowParam param = new UpdateMeteringUnitTimestampCountNowParam()\n            .method(UpdateMeteringUnitTimestampCountMethod.fromValue(method))\n            .count(((Number)cntVal).intValue());\n\n        MeteringUnitTimestampCount res = meteringApi\n            .updateMeteringUnitTimestampCountNow(tenantId, unit, param);\n\n        return ResponseEntity.ok(res.toJson());\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u201cnow\u201d \u6307\u5b9a\u3067\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="body">{"method":"add|sub|direct","count":int}</param>\n/// <returns>\u66f4\u65b0\u5f8c\u306e MeteringUnitTimestampCount \u30aa\u30d6\u30b8\u30a7\u30af\u30c8</returns>\napp.MapPut("/tenants/{tenant_id}/metering/{unit}/timestamp/now/count",\n    async (HttpContext context, string tenant_id, string unit, JsonElement body) =>\n{\n    try\n    {\n        var method = body.GetProperty("method").GetString()!;\n        var count  = body.GetProperty("count").GetInt32();\n        if (!new[] { "add", "sub", "direct" }.Contains(method))\n            return Results.BadRequest("method \u306f add|sub|direct \u306e\u3044\u305a\u308c\u304b\u3002");\n\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var param = new UpdateMeteringUnitTimestampCountNowParam(\n            method: Enum.Parse<UpdateMeteringUnitTimestampCountMethod>(method, true),\n            count:  count\n        );\n        var res = await metering.UpdateMeteringUnitTimestampCountNowAsync(\n            tenant_id, unit, param);\n        return Results.Json(res);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u201cnow\u201d \u6307\u5b9a\u3067\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u66f4\u65b0\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="body">{"method":"add|sub|direct","count":int}</param>\n/// <returns>\u66f4\u65b0\u5f8c\u306e MeteringUnitTimestampCount \u30aa\u30d6\u30b8\u30a7\u30af\u30c8</returns>\n[HttpPut]\n[Route("tenants/{tenant_id}/metering/{unit}/timestamp/now/count")]\npublic async Task<IHttpActionResult> UpdateUnitNowCount(\n    string tenant_id,\n    string unit,\n    [FromBody] UpdateRequestBody body)\n{\n    if (body == null || !new[] { "add", "sub", "direct" }.Contains(body.method))\n        return BadRequest("body must include method(add/sub/direct) & count(int)");\n\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var param = new UpdateMeteringUnitTimestampCountNowParam(\n            method: (UpdateMeteringUnitTimestampCountMethod)Enum.Parse(\n                typeof(UpdateMeteringUnitTimestampCountMethod), body.method, true),\n            count: body.count\n        );\n        var res = await metering.UpdateMeteringUnitTimestampCountNowAsync(\n            tenant_id, unit, param);\n        return Ok(res);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",children:"\u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/GetMeteringUnitMonthCountByTenantIdAndUnitNameThisMonth",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-5",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u30c6\u30ca\u30f3\u30c8\u5411\u3051\u306b\u4f7f\u7528\u91cf\u3092\u898b\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-6",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $meteringUnitName \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n * @return array\n */\npublic function getCountOfCurrentMonth(string $tenantId, string $meteringUnitName)\n{\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $unitCount = $pricingApi->getMeteringUnitMonthCountByTenantIdAndUnitNameThisMonth($tenantId, $meteringUnitName);\n\n    return [\n        'count' => $unitCount->getCount(),\n        'month' => $unitCount->getMonth(),\n        'meteringUnitName' => $unitCount->getMeteringUnitName(),\n    ];\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// returns: {"count": int, "month": string, "meteringUnitName": string}\nfunc getCountOfCurrentMonth(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tunit := c.Param("unit")\n\n\tresp, err := pricingClient.\n\t\tGetMeteringUnitMonthCountByTenantIdAndUnitNameThisMonthWithResponse(\n\t\t\tc.Request().Context(), tenantId, unit)\n\tif err != nil || resp.JSON200 == nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\treturn c.JSON(http.StatusOK, echo.Map{\n\t\t"count":            resp.JSON200.Count,\n\t\t"month":            resp.JSON200.Month,\n\t\t"meteringUnitName": resp.JSON200.MeteringUnitName,\n\t})\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n# returns: {"count": int, "month": str, "meteringUnitName": str}\ndef get_count_of_current_month(tenant_id: str, unit: str) -> Dict:\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    cnt = metering_api.get_metering_unit_month_count_by_tenant_id_and_unit_name_this_month(\n      tenant_id=tenant_id,\n      metering_unit_name=unit,\n    )\n    return {\n        "count": cnt.count,\n        "month": cnt.month,\n        "meteringUnitName": cnt.metering_unit_name,\n    }\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n@GetMapping("/tenants/{tenant_id}/metering/{unit:^(?!date$|month$).+}/month/this/count")\npublic ResponseEntity<?> getUnitThisMonthCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String unit\n) {\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        MeteringUnitMonthCount cnt = meteringApi\n            .getMeteringUnitMonthCountByTenantIdAndUnitNameThisMonth(tenantId, unit);\n\n        Map<String, Object> resp = new HashMap<>();\n        resp.put("count", cnt.getCount());\n        resp.put("month", cnt.getMonth());\n        resp.put("meteringUnitName", cnt.getMeteringUnitName());\n        return ResponseEntity.ok(resp);\n\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <returns>JSON { count:int, month:string, meteringUnitName:string }</returns>\napp.MapGet("/tenants/{tenant_id}/metering/{unit}/month/this/count",\n    async (HttpContext context, string tenant_id, string unit) =>\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitMonthCountByTenantIdAndUnitNameThisMonthAsync(\n            tenant_id, unit);\n        return Results.Json(new {\n            count            = cnt.Count,\n            month            = cnt.Month,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u5f53\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <returns>JSON { count:int, month:string, meteringUnitName:string }</returns>\n[HttpGet]\n[Route("tenants/{tenant_id}/metering/{unit}/month/this/count")]\npublic async Task<IHttpActionResult> GetUnitThisMonthCount(\n    string tenant_id,\n    string unit)\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitMonthCountByTenantIdAndUnitNameThisMonthAsync(\n            tenant_id, unit);\n        return Ok(new\n        {\n            count            = cnt.Count,\n            month            = cnt.Month,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",children:"\u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/GetMeteringUnitMonthCountByTenantIdAndUnitNameAndMonth",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-6",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u30c6\u30ca\u30f3\u30c8\u5411\u3051\u306b\u4f7f\u7528\u91cf\u3092\u898b\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-7",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $meteringUnitName \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n * @param string $month \u6708 yyyy-mm\u5f62\u5f0f\n * @return array\n */\npublic function getCountOfSpecifiedMonth(string $tenantId, string $meteringUnitName, string $month)\n{\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $unitCount = $pricingApi->getMeteringUnitMonthCountByTenantIdAndUnitNameAndMonth(\n        $tenantId, $meteringUnitName, $month\n    );\n\n    return [\n        'count' => $unitCount->getCount(),\n        'month' => $unitCount->getMonth(),\n        'meteringUnitName' => $unitCount->getMeteringUnitName(),\n    ];\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// month: yyyy-MM\u5f62\u5f0f\u306e\u6708\n// returns: {"count": int, "month": string, "meteringUnitName": string}\nfunc getCountOfSpecifiedMonth(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tunit := c.Param("unit")\n\tmonth := c.Param("month") // yyyy-MM\n\n\tresp, err := pricingClient.\n\t\tGetMeteringUnitMonthCountByTenantIdAndUnitNameAndMonthWithResponse(\n\t\t\tc.Request().Context(), tenantId, unit, month)\n\tif err != nil || resp.JSON200 == nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\n\treturn c.JSON(http.StatusOK, echo.Map{\n\t\t"count":            resp.JSON200.Count,\n\t\t"month":            resp.JSON200.Month,\n\t\t"meteringUnitName": resp.JSON200.MeteringUnitName,\n\t})\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n# month: yyyy-MM\u5f62\u5f0f\u306e\u6708\n# returns: {"count": int, "month": str, "meteringUnitName": str}\ndef get_count_of_specified_month(tenant_id: str, unit: str, month: str) -> Dict:\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    cnt = metering_api.get_metering_unit_month_count_by_tenant_id_and_unit_name_and_month(\n        tenant_id=tenant_id,\n        metering_unit_name=unit,\n        month=month,\n    )\n    return {\n        "count": cnt.count,\n        "month": cnt.month,\n        "meteringUnitName": cnt.metering_unit_name,\n    }\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// unit: \u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d\n// month: yyyy-MM\u5f62\u5f0f\u306e\u6708\n@GetMapping("/tenants/{tenant_id}/metering/{unit:^(?!date$|month$).+}/month/{month}/count")\npublic ResponseEntity<?> getUnitMonthCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String unit,\n        @PathVariable String month\n) {\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        MeteringUnitMonthCount cnt = meteringApi\n            .getMeteringUnitMonthCountByTenantIdAndUnitNameAndMonth(tenantId, unit, month);\n\n        Map<String, Object> resp = new HashMap<>();\n        resp.put("count", cnt.getCount());\n        resp.put("month", cnt.getMonth());\n        resp.put("meteringUnitName", cnt.getMeteringUnitName());\n        return ResponseEntity.ok(resp);\n\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="month">\u6708 (yyyy-MM)</param>\n/// <returns>JSON { count:int, month:string, meteringUnitName:string }</returns>\napp.MapGet("/tenants/{tenant_id}/metering/{unit}/month/{month}/count",\n    async (HttpContext context, string tenant_id, string unit, string month) =>\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitMonthCountByTenantIdAndUnitNameAndMonthAsync(\n            tenant_id, unit, month);\n        return Results.Json(new {\n            count            = cnt.Count,\n            month            = cnt.Month,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u6307\u5b9a\u6708\u306e\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="unit">\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u540d</param>\n/// <param name="month">\u6708 (yyyy-MM)</param>\n/// <returns>JSON { count:int, month:string, meteringUnitName:string }</returns>\n[HttpGet]\n[Route("tenants/{tenant_id}/metering/{unit}/month/{month}/count")]\npublic async Task<IHttpActionResult> GetUnitMonthCount(\n    string tenant_id,\n    string unit,\n    string month)\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var cnt = await metering.GetMeteringUnitMonthCountByTenantIdAndUnitNameAndMonthAsync(\n            tenant_id, unit, month);\n        return Ok(new\n        {\n            count            = cnt.Count,\n            month            = cnt.Month,\n            meteringUnitName = cnt.MeteringUnitName\n        });\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",children:"\u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/GetMeteringUnitDateCountsByTenantIdAndDate",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-7",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u30c6\u30ca\u30f3\u30c8\u5411\u3051\u306b\u4f7f\u7528\u91cf\u3092\u898b\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-8",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $date \u65e5\u4ed8 yyyy-mm-dd\u5f62\u5f0f\n * @return \\AntiPatternInc\\Saasus\\Sdk\\Pricing\\Model\\MeteringUnitDateCount[]\n */\npublic function getAllMeteringCountOfSpecifiedDate(string $tenantId, string $date)\n{\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $allMeteringCount = $pricingApi->getMeteringUnitDateCountsByTenantIdAndDate(\n        $tenantId, $date\n    );\n\n    return array_map(function ($count) {\n        return [\n            'count' => $unitCount->getCount(),\n            'date' => $unitCount->getDate(),\n            'meteringUnitName' => $unitCount->getMeteringUnitName(),\n        ];\n    }, $allMeteringCount->getCounts());\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// date: yyyy-MM-dd\u5f62\u5f0f\u306e\u65e5\u4ed8\n// returns: []{"count": int, "date": string, "meteringUnitName": string}\nfunc getAllCountsOfSpecifiedDate(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tdate := c.Param("date")\n\n\tresp, err := pricingClient.\n\t\tGetMeteringUnitDateCountsByTenantIdAndDateWithResponse(\n\t\t\tc.Request().Context(), tenantId, date)\n\tif err != nil || resp.JSON200 == nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\n\tout := make([]map[string]interface{}, len(resp.JSON200.Counts))\n\tfor i, v := range resp.JSON200.Counts {\n\t\tout[i] = map[string]interface{}{\n\t\t\t"count":            v.Count,\n\t\t\t"date":             v.Date,\n\t\t\t"meteringUnitName": v.MeteringUnitName,\n\t\t}\n\t}\n\treturn c.JSON(http.StatusOK, out)\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# date: yyyy-MM-dd\u5f62\u5f0f\u306e\u65e5\u4ed8\n# returns: List[{"count": int, "date": str, "meteringUnitName": str}]\ndef get_all_counts_of_specified_date(tenant_id: str, date: str) -> List[Dict]:\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    all_counts = metering_api.get_metering_unit_date_counts_by_tenant_id_and_date(\n        tenant_id=tenant_id,\n        date=date,\n    )\n    return [\n        {"count": v.count, "date": v.date, "meteringUnitName": v.metering_unit_name}\n        for v in all_counts.counts\n    ]\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// date: yyyy-MM-dd\u5f62\u5f0f\u306e\u65e5\u4ed8\n@GetMapping("/tenants/{tenant_id}/metering/date/{date}/count")\npublic ResponseEntity<?> getAllUnitsDateCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String date\n) {\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        MeteringUnitDateCounts all = meteringApi\n            .getMeteringUnitDateCountsByTenantIdAndDate(tenantId, date);\n\n        List<Map<String,Object>> list = new ArrayList<>();\n        for (MeteringUnitDateCount e : all.getCounts()) {\n            Map<String,Object> m = new HashMap<>();\n            m.put("count", e.getCount());\n            m.put("date",  e.getDate());\n            m.put("meteringUnitName", e.getMeteringUnitName());\n            list.add(m);\n        }\n        return ResponseEntity.ok(list);\n\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u6307\u5b9a\u65e5\u306e\u5168\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="date">\u65e5\u4ed8 (yyyy-MM-dd)</param>\n/// <returns>JSON[] of { count:int, date:string, meteringUnitName:string }</returns>\napp.MapGet("/tenants/{tenant_id}/metering/date/{date}/count",\n    async (HttpContext context, string tenant_id, string date) =>\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var all = await metering.GetMeteringUnitDateCountsByTenantIdAndDateAsync(\n            tenant_id, date);\n        var list = all.Counts.Select(v => new {\n            count            = v.Count,\n            date             = v.Date,\n            meteringUnitName = v.MeteringUnitName\n        });\n        return Results.Json(list);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u6307\u5b9a\u65e5\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="date">\u65e5\u4ed8 (yyyy-MM-dd)</param>\n/// <returns>JSON[] of { count:int, date:string, meteringUnitName:string }</returns>\n[HttpGet]\n[Route("tenants/{tenant_id}/metering/date/{date}/count")]\npublic async Task<IHttpActionResult> GetAllUnitsDateCount(\n    string tenant_id,\n    string date)\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var all = await metering.GetMeteringUnitDateCountsByTenantIdAndDateAsync(\n            tenant_id, date);\n        var list = all.Counts\n            .Select(v => new\n            {\n                count            = v.Count,\n                date             = v.Date,\n                meteringUnitName = v.MeteringUnitName\n            })\n            .ToList();\n        return Ok(list);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"\u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97",children:"\u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97"}),"\n",(0,a.jsx)("a",{href:"/ja/docs/reference/pricing-api#tag/metering/operation/GetMeteringUnitMonthCountsByTenantIdAndMonth",target:"_blank",children:"API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,a.jsx)(t.h3,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9-8",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,a.jsx)(t.p,{children:"\u30c6\u30ca\u30f3\u30c8\u5411\u3051\u306b\u4f7f\u7528\u91cf\u3092\u898b\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002"}),"\n",(0,a.jsx)(t.h3,{id:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb-9",children:"\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(u.A,{value:"php",label:"PHP",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-php",children:"/**\n * \u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n *\n * @param string $tenantId \u30c6\u30ca\u30f3\u30c8ID\n * @param string $month \u6708 yyyy-mm\u5f62\u5f0f\n * @return MeteringUnitMonthCount[]\n */\npublic function getAllMeteringCountOfSpecifiedMonth(string $tenantId, string $month)\n{\n    $client = new \\AntiPatternInc\\Saasus\\Api\\Client();\n    $pricingApi = $client->getPricingClient();\n    $allMeteringCount = $pricingApi->getMeteringUnitMonthCountsByTenantIdAndMonth(\n        $tenantId, $month\n    );\n\n    return array_map(function ($unitCount) {\n        return [\n            'count' => $unitCount->getCount(),\n            'month' => $unitCount->getMonth(),\n            'meteringUnitName' => $unitCount->getMeteringUnitName(),\n        ];\n    }, $allMeteringCount->getCounts());\n}\n"})})}),(0,a.jsx)(u.A,{value:"go",label:"Go",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-go",children:'// \u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// month: yyyy-MM\u5f62\u5f0f\u306e\u6708\n// returns: []{"count": int, "month": string, "meteringUnitName": string}\nfunc getAllCountsOfSpecifiedMonth(c echo.Context) error {\n\ttenantId := c.Param("tenantId")\n\tmonth := c.Param("month")\n\n\tresp, err := pricingClient.\n\t\tGetMeteringUnitMonthCountsByTenantIdAndMonthWithResponse(\n\t\t\tc.Request().Context(), tenantId, month)\n\tif err != nil || resp.JSON200 == nil {\n\t\treturn c.String(http.StatusInternalServerError, "pricing API error")\n\t}\n\n\tout := make([]map[string]interface{}, len(resp.JSON200.Counts))\n\tfor i, v := range resp.JSON200.Counts {\n\t\tout[i] = map[string]interface{}{\n\t\t\t"count":            v.Count,\n\t\t\t"month":            v.Month,\n\t\t\t"meteringUnitName": v.MeteringUnitName,\n\t\t}\n\t}\n\treturn c.JSON(http.StatusOK, out)\n}\n'})})}),(0,a.jsx)(u.A,{value:"python",label:"Python",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'# \u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n# tenant_id: \u30c6\u30ca\u30f3\u30c8ID\n# month: yyyy-MM\u5f62\u5f0f\u306e\u6708\n# returns: List[{"count": int, "month": str, "meteringUnitName": str}]\ndef get_all_counts_of_specified_month(tenant_id: str, month: str) -> List[Dict]:\n    metering_api = MeteringApi(api_client=pricing_api_client)\n    all_counts = metering_api.get_metering_unit_month_counts_by_tenant_id_and_month(\n        tenant_id=tenant_id,\n        month=month,\n    )\n    return [\n        {"count": v.count, "month": v.month, "meteringUnitName": v.metering_unit_name}\n        for v in all_counts.counts\n    ]\n'})})}),(0,a.jsx)(u.A,{value:"java",label:"Java",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'// \u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n// tenantId: \u30c6\u30ca\u30f3\u30c8ID\n// month: yyyy-MM\u5f62\u5f0f\u306e\u6708\n@GetMapping("/tenants/{tenant_id}/metering/month/{month}/count")\npublic ResponseEntity<?> getAllUnitsMonthCount(\n        HttpServletRequest request,\n        @PathVariable("tenant_id") String tenantId,\n        @PathVariable String month\n) {\n    try {\n        PricingApiClient pricingClient = new Configuration().getPricingApiClient();\n        pricingClient.setReferer(request.getHeader("X-Saasus-Referer"));\n        MeteringApi meteringApi = new MeteringApi(pricingClient);\n\n        MeteringUnitMonthCounts all = meteringApi\n            .getMeteringUnitMonthCountsByTenantIdAndMonth(tenantId, month);\n\n        List<Map<String,Object>> list = new ArrayList<>();\n        for (MeteringUnitMonthCount e : all.getCounts()) {\n            Map<String,Object> m = new HashMap<>();\n            m.put("count", e.getCount());\n            m.put("month",  e.getMonth());\n            m.put("meteringUnitName", e.getMeteringUnitName());\n            list.add(m);\n        }\n        return ResponseEntity.ok(list);\n\n    } catch (saasus.sdk.pricing.ApiException e) {\n        throw new ResponseStatusException(\n            HttpStatus.INTERNAL_SERVER_ERROR,\n            "Pricing API error: " + e.getMessage(), e\n        );\n    }\n}\n'})})}),(0,a.jsx)(u.A,{value:"csharp",label:"C#(.Net8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\u6307\u5b9a\u6708\u306e\u5168\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97</summary>\n/// <param name="context">HTTP \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8</param>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="month">\u6708 (yyyy-MM)</param>\n/// <returns>JSON[] of { count:int, month:string, meteringUnitName:string }</returns>\napp.MapGet("/tenants/{tenant_id}/metering/month/{month}/count",\n    async (HttpContext context, string tenant_id, string month) =>\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig(), context);\n        var metering = new MeteringApi(cfg);\n        var all = await metering.GetMeteringUnitMonthCountsByTenantIdAndMonthAsync(\n            tenant_id, month);\n        var list = all.Counts.Select(v => new {\n            count            = v.Count,\n            month            = v.Month,\n            meteringUnitName = v.MeteringUnitName\n        });\n        return Results.Json(list);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n});\n'})})}),(0,a.jsx)(u.A,{value:"csharp(.Netfw4.8)",label:"C#(.Netfw4.8)",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'/// <summary>\n/// \u6307\u5b9a\u6708\u306e\u5168\u30e1\u30fc\u30bf\u30ea\u30f3\u30b0\u30e6\u30cb\u30c3\u30c8\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\n/// </summary>\n/// <param name="tenant_id">\u30c6\u30ca\u30f3\u30c8ID</param>\n/// <param name="month">\u6708 (yyyy-MM)</param>\n/// <returns>JSON[] of { count:int, month:string, meteringUnitName:string }</returns>\n[HttpGet]\n[Route("tenants/{tenant_id}/metering/month/{month}/count")]\npublic async Task<IHttpActionResult> GetAllUnitsMonthCount(\n    string tenant_id,\n    string month)\n{\n    try\n    {\n        var cfg = CreateClientConfiguration(c => c.GetPricingApiClientConfig());\n        var metering = new MeteringApi(cfg);\n        var all = await metering.GetMeteringUnitMonthCountsByTenantIdAndMonthAsync(\n            tenant_id, month);\n        var list = all.Counts\n            .Select(v => new\n            {\n                count            = v.Count,\n                month            = v.Month,\n                meteringUnitName = v.MeteringUnitName\n            })\n            .ToList();\n        return Ok(list);\n    }\n    catch (Exception ex) { return HandleApiException(ex); }\n}\n'})})})]})]})}function l(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}},79329:(n,t,e)=>{e.d(t,{A:()=>s});e(96540);var i=e(34164);const a={tabItem:"tabItem_Ymn6"};var r=e(74848);function s(n){let{children:t,hidden:e,className:s}=n;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,s),hidden:e,children:t})}}}]);